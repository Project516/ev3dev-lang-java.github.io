#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version R5_6-24-gf6e263 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="Helvetica",fontsize=10,labelfontname="Helvetica",labelfontsize=10];
	node [fontname="Helvetica",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	// ev3dev.sensors.BaseSensor
	c561 [label=<<table title="ev3dev.sensors.BaseSensor" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./BaseSensor.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> BaseSensor </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + SWITCH_DELAY : int </td></tr>
<tr><td align="left" balign="left"> - modeList : ArrayList&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> # currentMode : int </td></tr>
<tr><td align="left" balign="left"> # modes : SensorMode[] </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + BaseSensor(sensorPort : Port, mode : String, device : String) </td></tr>
<tr><td align="left" balign="left"> + BaseSensor(sensorPort : Port, mode : String) </td></tr>
<tr><td align="left" balign="left"> # setModes(m : SensorMode[]) </td></tr>
<tr><td align="left" balign="left"> + getAvailableModes() : ArrayList&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> + getMode(mode : int) : SensorMode </td></tr>
<tr><td align="left" balign="left"> + getMode(modeName : String) : SensorMode </td></tr>
<tr><td align="left" balign="left"> - modeInvalid(mode : int) : boolean </td></tr>
<tr><td align="left" balign="left"> - getIndex(modeName : String) : int </td></tr>
<tr><td align="left" balign="left"> + getName() : String </td></tr>
<tr><td align="left" balign="left"> + sampleSize() : int </td></tr>
<tr><td align="left" balign="left"> + fetchSample(sample : float[], offset : int) </td></tr>
<tr><td align="left" balign="left"> + setCurrentMode(mode : int) </td></tr>
<tr><td align="left" balign="left"> + getCurrentMode() : int </td></tr>
<tr><td align="left" balign="left"> + setCurrentMode(modeName : String) </td></tr>
<tr><td align="left" balign="left"> + getModeCount() : int </td></tr>
<tr><td align="left" balign="left"> # getSystemMode() : String </td></tr>
<tr><td align="left" balign="left"> - setSystemMode(mode : String) </td></tr>
<tr><td align="left" balign="left"> + switchMode(newMode : String, switchDelay : long) </td></tr>
		</table></td></tr>
		</table>>, URL="./BaseSensor.html", fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// ev3dev.sensors.Battery
	c562 [label=<<table title="ev3dev.sensors.Battery" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./Battery.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Battery </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - LOGGER : Logger </td></tr>
<tr><td align="left" balign="left"> - BATTERY : String </td></tr>
<tr><td align="left" balign="left"> - BATTERY_EV3 : String </td></tr>
<tr><td align="left" balign="left"> - BATTERY_PISTORMS : String </td></tr>
<tr><td align="left" balign="left"> - BATTERY_BRICKPI : String </td></tr>
<tr><td align="left" balign="left"> - BATTERY_BRICKPI3 : String </td></tr>
<tr><td align="left" balign="left"> - BATTERY_PATH : String </td></tr>
<tr><td align="left" balign="left"> - VOLTAGE : String </td></tr>
<tr><td align="left" balign="left"> - CURRENT : String </td></tr>
<tr><td align="left" balign="left"> - BATTERY_PATH_LOCAL : String </td></tr>
<tr><td align="left" balign="left"> - instance : Battery </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - Battery() </td></tr>
<tr><td align="left" balign="left"> + getInstance() : Battery </td></tr>
<tr><td align="left" balign="left"> + getVoltageMilliVolt() : int </td></tr>
<tr><td align="left" balign="left"> + getVoltage() : float </td></tr>
<tr><td align="left" balign="left"> + getBatteryCurrent() : float </td></tr>
<tr><td align="left" balign="left"> + getMotorCurrent() : float </td></tr>
		</table></td></tr>
		</table>>, URL="./Battery.html", fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// ev3dev.sensors.Button
	c563 [label=<<table title="ev3dev.sensors.Button" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./Button.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Button </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - log : Logger </td></tr>
<tr><td align="left" balign="left"> + ENTER : Key </td></tr>
<tr><td align="left" balign="left"> + LEFT : Key </td></tr>
<tr><td align="left" balign="left"> + RIGHT : Key </td></tr>
<tr><td align="left" balign="left"> + ESCAPE : Key </td></tr>
<tr><td align="left" balign="left"> + UP : Key </td></tr>
<tr><td align="left" balign="left"> + DOWN : Key </td></tr>
<tr><td align="left" balign="left"> - ALL : Key </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Button() </td></tr>
<tr><td align="left" balign="left"> + waitForAnyEvent() : int </td></tr>
<tr><td align="left" balign="left"> + waitForAnyEvent(timeout : int) : int </td></tr>
<tr><td align="left" balign="left"> + waitForAnyPress(timeout : int) : int </td></tr>
<tr><td align="left" balign="left"> + waitForAnyPress() : int </td></tr>
		</table></td></tr>
		</table>>, URL="./Button.html", fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// ev3dev.sensors.EV3Key
	c564 [label=<<table title="ev3dev.sensors.EV3Key" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./EV3Key.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> EV3Key </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - log : Logger </td></tr>
<tr><td align="left" balign="left"> + BUTTON_UP : int </td></tr>
<tr><td align="left" balign="left"> + BUTTON_DOWN : int </td></tr>
<tr><td align="left" balign="left"> + BUTTON_LEFT : int </td></tr>
<tr><td align="left" balign="left"> + BUTTON_RIGHT : int </td></tr>
<tr><td align="left" balign="left"> + BUTTON_ENTER : int </td></tr>
<tr><td align="left" balign="left"> + BUTTON_BACKSPACE : int </td></tr>
<tr><td align="left" balign="left"> + BUTTON_ESCAPE : int </td></tr>
<tr><td align="left" balign="left"> + BUTTON_ALL : int </td></tr>
<tr><td align="left" balign="left"> ~ STATE_KEY_DOWN : byte </td></tr>
<tr><td align="left" balign="left"> ~ STATE_KEY_UP : byte </td></tr>
<tr><td align="left" balign="left"> - EVENT_BUFFER_LEN : int </td></tr>
<tr><td align="left" balign="left"> - KEY_ID_INDEX : int </td></tr>
<tr><td align="left" balign="left"> - KEY_STATE_INDEX : int </td></tr>
<tr><td align="left" balign="left"> - keyBits : byte </td></tr>
<tr><td align="left" balign="left"> - keyListeners : Map&lt;EV3Key.KeyType, Set&lt;KeyListener&gt;&gt; </td></tr>
<tr><td align="left" balign="left"> - keyEventReader : Thread </td></tr>
<tr><td align="left" balign="left"> - keyType : EV3Key.KeyType </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + EV3Key(keyType : EV3Key.KeyType) </td></tr>
<tr><td align="left" balign="left"> + EV3Key(id : int) </td></tr>
<tr><td align="left" balign="left"> + getId() : int </td></tr>
<tr><td align="left" balign="left"> + isDown() : boolean </td></tr>
<tr><td align="left" balign="left"> + isUp() : boolean </td></tr>
<tr><td align="left" balign="left"> + waitForPress() </td></tr>
<tr><td align="left" balign="left"> + waitForPressAndRelease() </td></tr>
<tr><td align="left" balign="left"> + addKeyListener(keyListener : KeyListener) </td></tr>
<tr><td align="left" balign="left"> + removeKeyListener(keyListener : KeyListener) </td></tr>
<tr><td align="left" balign="left"> + simulateEvent(i : int) </td></tr>
<tr><td align="left" balign="left"> + getName() : String </td></tr>
<tr><td align="left" balign="left"> + equals(obj : Object) : boolean </td></tr>
<tr><td align="left" balign="left"> + hashCode() : int </td></tr>
<tr><td align="left" balign="left"> + toString() : String </td></tr>
<tr><td align="left" balign="left"> ~ processKeyEvent(keyId : byte, keyState : byte) </td></tr>
<tr><td align="left" balign="left"> - broadcastToListeners(keyType : EV3Key.KeyType, notificationMethod : BiConsumer&lt;KeyListener, Key&gt;) </td></tr>
		</table></td></tr>
		</table>>, URL="./EV3Key.html", fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// ev3dev.sensors.EV3Key.KeyType
	c565 [label=<<table title="ev3dev.sensors.EV3Key.KeyType" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./EV3Key.KeyType.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;enumeration&#187; </td></tr>
<tr><td align="center" balign="center"> KeyType </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - LOOKUP : Map&lt;Byte, EV3Key.KeyType&gt; </td></tr>
<tr><td align="left" balign="left"> - name : String </td></tr>
<tr><td align="left" balign="left"> - id : byte </td></tr>
<tr><td align="left" balign="left"> - bitMask : byte </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> UP </td></tr>
<tr><td align="left" balign="left"> DOWN </td></tr>
<tr><td align="left" balign="left"> LEFT </td></tr>
<tr><td align="left" balign="left"> RIGHT </td></tr>
<tr><td align="left" balign="left"> ENTER </td></tr>
<tr><td align="left" balign="left"> ESCAPE </td></tr>
<tr><td align="left" balign="left"> ALL </td></tr>
		</table></td></tr>
		</table>>, URL="./EV3Key.KeyType.html", fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// ev3dev.sensors.GenericMode
	c566 [label=<<table title="ev3dev.sensors.GenericMode" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./GenericMode.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> GenericMode </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - pathDevice : File </td></tr>
<tr><td align="left" balign="left"> - sampleSize : int </td></tr>
<tr><td align="left" balign="left"> - modeName : String </td></tr>
<tr><td align="left" balign="left"> - correctMin : float </td></tr>
<tr><td align="left" balign="left"> - correctMax : float </td></tr>
<tr><td align="left" balign="left"> - correctFactor : float </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + GenericMode(pathDevice : File, sampleSize : int, modeName : String) </td></tr>
<tr><td align="left" balign="left"> + GenericMode(pathDevice : File, sampleSize : int, modeName : String, correctMin : float, correctMax : float, correctFactor : float) </td></tr>
<tr><td align="left" balign="left"> + getName() : String </td></tr>
<tr><td align="left" balign="left"> + sampleSize() : int </td></tr>
<tr><td align="left" balign="left"> + fetchSample(sample : float[], offset : int) </td></tr>
		</table></td></tr>
		</table>>, URL="./GenericMode.html", fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// ev3dev.sensors.EV3Key NAVASSOC ev3dev.sensors.EV3Key.KeyType
	c564:p -> c565:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
}

