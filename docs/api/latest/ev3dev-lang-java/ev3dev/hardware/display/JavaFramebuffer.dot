#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version R5_6-24-gf6e263 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="Helvetica",fontsize=10,labelfontname="Helvetica",labelfontsize=10];
	node [fontname="Helvetica",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	// ev3dev.actuators.LCDStretch
	c3779 [label=<<table title="ev3dev.actuators.LCDStretch" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../../actuators/LCDStretch.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> LCDStretch </td></tr>
<tr><td align="center" balign="center"><font point-size="7.0"> ev3dev.actuators </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + EV3DEV_LCD_KEY : java.lang.String </td></tr>
<tr><td align="left" balign="left"> + EV3DEV_LCD_DEFAULT : java.lang.String </td></tr>
<tr><td align="left" balign="left"> + EV3DEV_LCD_MODE_KEY : java.lang.String </td></tr>
<tr><td align="left" balign="left"> - log : Logger </td></tr>
<tr><td align="left" balign="left"> - fb : ev3dev.hardware.display.JavaFramebuffer </td></tr>
<tr><td align="left" balign="left"> - image : java.awt.image.BufferedImage </td></tr>
<tr><td align="left" balign="left"> - g2d : java.awt.Graphics2D </td></tr>
<tr><td align="left" balign="left"> - timer : java.util.Timer </td></tr>
<tr><td align="left" balign="left"> - timer_run : boolean </td></tr>
<tr><td align="left" balign="left"> - timer_msec : int </td></tr>
<tr><td align="left" balign="left"> - stroke : int </td></tr>
<tr><td align="left" balign="left"> - instance : ev3dev.actuators.LCDStretch </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - LCDStretch() </td></tr>
<tr><td align="left" balign="left"> + getInstance() : GraphicsLCD </td></tr>
<tr><td align="left" balign="left"> + getFramebuffer() : ev3dev.hardware.display.JavaFramebuffer </td></tr>
<tr><td align="left" balign="left"> + flush() </td></tr>
<tr><td align="left" balign="left"> + translate(x : int, y : int) </td></tr>
<tr><td align="left" balign="left"> + getFont() : java.awt.Font </td></tr>
<tr><td align="left" balign="left"> + setFont(font : java.awt.Font) </td></tr>
<tr><td align="left" balign="left"> + getTranslateX() : int </td></tr>
<tr><td align="left" balign="left"> + getTranslateY() : int </td></tr>
<tr><td align="left" balign="left"> + setColor(rgb : int) </td></tr>
<tr><td align="left" balign="left"> + setColor(r : int, g : int, b : int) </td></tr>
<tr><td align="left" balign="left"> + setPixel(x : int, y : int, color : int) </td></tr>
<tr><td align="left" balign="left"> + getPixel(x : int, y : int) : int </td></tr>
<tr><td align="left" balign="left"> + drawString(str : java.lang.String, x : int, y : int, anchor : int, inverted : boolean) </td></tr>
<tr><td align="left" balign="left"> + drawString(str : java.lang.String, x : int, y : int, anchor : int) </td></tr>
<tr><td align="left" balign="left"> + drawSubstring(str : java.lang.String, offset : int, len : int, x : int, y : int, anchor : int) </td></tr>
<tr><td align="left" balign="left"> + drawChar(character : char, x : int, y : int, anchor : int) </td></tr>
<tr><td align="left" balign="left"> + drawChars(data : char[], offset : int, length : int, x : int, y : int, anchor : int) </td></tr>
<tr><td align="left" balign="left"> + getStrokeStyle() : int </td></tr>
<tr><td align="left" balign="left"> + setStrokeStyle(i : int) </td></tr>
<tr><td align="left" balign="left"> + drawRegionRop(src : java.awt.Image, sx : int, sy : int, w : int, h : int, x : int, y : int, anchor : int, rop : int) </td></tr>
<tr><td align="left" balign="left"> + drawRegionRop(src : java.awt.Image, sx : int, sy : int, w : int, h : int, transform : int, x : int, y : int, anchor : int, rop : int) </td></tr>
<tr><td align="left" balign="left"> + drawRegion(src : java.awt.Image, sx : int, sy : int, w : int, h : int, transform : int, x : int, y : int, anchor : int) </td></tr>
<tr><td align="left" balign="left"> + drawImage(image : java.awt.Image, i : int, i1 : int, i2 : int) </td></tr>
<tr><td align="left" balign="left"> + drawLine(x1 : int, y1 : int, x2 : int, y2 : int) </td></tr>
<tr><td align="left" balign="left"> + fillRect(x : int, y : int, width : int, height : int) </td></tr>
<tr><td align="left" balign="left"> + copyArea(sx : int, sy : int, w : int, h : int, x : int, y : int, anchor : int) </td></tr>
<tr><td align="left" balign="left"> - adjustX(x : int, w : int, anchor : int) : int </td></tr>
<tr><td align="left" balign="left"> - adjustY(y : int, h : int, anchor : int) : int </td></tr>
<tr><td align="left" balign="left"> + drawRoundRect(x : int, y : int, width : int, height : int, arcWidth : int, arcHeight : int) </td></tr>
<tr><td align="left" balign="left"> + drawRect(x : int, y : int, width : int, height : int) </td></tr>
<tr><td align="left" balign="left"> + drawArc(x : int, y : int, width : int, height : int, startAngle : int, arcAngle : int) </td></tr>
<tr><td align="left" balign="left"> + fillArc(x : int, y : int, width : int, height : int, startAngle : int, arcAngle : int) </td></tr>
<tr><td align="left" balign="left"> + refresh() </td></tr>
<tr><td align="left" balign="left"> + clear() </td></tr>
<tr><td align="left" balign="left"> + getWidth() : int </td></tr>
<tr><td align="left" balign="left"> + getHeight() : int </td></tr>
<tr><td align="left" balign="left"> + getDisplay() : byte[] </td></tr>
<tr><td align="left" balign="left"> + getHWDisplay() : byte[] </td></tr>
<tr><td align="left" balign="left"> + setContrast(i : int) </td></tr>
<tr><td align="left" balign="left"> - lejos2rgb(src : byte[], width : int, height : int) : java.awt.image.BufferedImage </td></tr>
<tr><td align="left" balign="left"> - any2rgb(img : java.awt.Image) : java.awt.image.BufferedImage </td></tr>
<tr><td align="left" balign="left"> - any2lejos(img : java.awt.image.BufferedImage) : byte[] </td></tr>
<tr><td align="left" balign="left"> - java_lejos_flip(in : java.awt.image.BufferedImage, out : java.awt.image.BufferedImage) : java.awt.image.BufferedImage </td></tr>
<tr><td align="left" balign="left"> + bitBlt(src : byte[], sw : int, sh : int, sx : int, sy : int, dx : int, dy : int, w : int, h : int, rop : int) </td></tr>
<tr><td align="left" balign="left"> + bitBlt(src : byte[], sw : int, sh : int, sx : int, sy : int, dst : byte[], dw : int, dh : int, dx : int, dy : int, w : int, h : int, rop : int) </td></tr>
<tr><td align="left" balign="left"> - bitBlt(src : java.awt.image.BufferedImage, sx : int, sy : int, dst : java.awt.image.BufferedImage, dx : int, dy : int, w : int, h : int, rop : int) </td></tr>
<tr><td align="left" balign="left"> + setAutoRefresh(b : boolean) </td></tr>
<tr><td align="left" balign="left"> + setAutoRefreshPeriod(i : int) : int </td></tr>
<tr><td align="left" balign="left"> - timerUpdate() </td></tr>
		</table></td></tr>
		</table>>, URL="../../actuators/LCDStretch.html", fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// ev3dev.hardware.display.DisplayInterface
	c3801 [label=<<table title="ev3dev.hardware.display.DisplayInterface" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./DisplayInterface.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Helvetica-Oblique"> DisplayInterface </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> # fbInstance : JavaFramebuffer </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + DisplayInterface() </td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="9.0"> + switchToGraphicsMode() </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="9.0"> + switchToTextMode() </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="9.0"> + openFramebuffer() : JavaFramebuffer </font></td></tr>
<tr><td align="left" balign="left"> + releaseFramebuffer(fb : JavaFramebuffer) </td></tr>
<tr><td align="left" balign="left"> # closeFramebuffer() </td></tr>
<tr><td align="left" balign="left"> # initializeFramebuffer(backend : NativeFramebuffer, enable : boolean) </td></tr>
		</table></td></tr>
		</table>>, URL="./DisplayInterface.html", fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// ev3dev.hardware.display.JavaFramebuffer
	c3803 [label=<<table title="ev3dev.hardware.display.JavaFramebuffer" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" bgcolor="lemonChiffon" href="./JavaFramebuffer.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> JavaFramebuffer </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="9.0"> + getWidth() : int </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="9.0"> + getHeight() : int </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="9.0"> + getStride() : int </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="9.0"> + createCompatibleBuffer() : BufferedImage </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="9.0"> + createCompatibleBuffer(width : int, height : int) : BufferedImage </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="9.0"> + createCompatibleBuffer(width : int, height : int, stride : int) : BufferedImage </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="9.0"> + createCompatibleBuffer(width : int, height : int, stride : int, backed : byte[]) : BufferedImage </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="9.0"> + flushScreen(compatible : BufferedImage) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="9.0"> + setFlushEnabled(rly : boolean) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="9.0"> + storeData() </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="9.0"> + restoreData() </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="9.0"> + clear() </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="9.0"> + getDisplay() : DisplayInterface </font></td></tr>
		</table></td></tr>
		</table>>, URL="./JavaFramebuffer.html", fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// ev3dev.hardware.display.LinuxFramebuffer
	c3804 [label=<<table title="ev3dev.hardware.display.LinuxFramebuffer" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./LinuxFramebuffer.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Helvetica-Oblique"> LinuxFramebuffer </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - fixinfo : NativeFramebuffer.fb_fix_screeninfo </td></tr>
<tr><td align="left" balign="left"> - varinfo : NativeFramebuffer.fb_var_screeninfo </td></tr>
<tr><td align="left" balign="left"> - device : NativeFramebuffer </td></tr>
<tr><td align="left" balign="left"> - videomem : Pointer </td></tr>
<tr><td align="left" balign="left"> - flushEnabled : boolean </td></tr>
<tr><td align="left" balign="left"> - backup : byte[] </td></tr>
<tr><td align="left" balign="left"> - blank : BufferedImage </td></tr>
<tr><td align="left" balign="left"> - closeDevice : boolean </td></tr>
<tr><td align="left" balign="left"> - display : DisplayInterface </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + LinuxFramebuffer(fb : NativeFramebuffer, disp : DisplayInterface) </td></tr>
<tr><td align="left" balign="left"> # initializeMemory() </td></tr>
<tr><td align="left" balign="left"> + close() </td></tr>
<tr><td align="left" balign="left"> + getWidth() : int </td></tr>
<tr><td align="left" balign="left"> + getHeight() : int </td></tr>
<tr><td align="left" balign="left"> + getStride() : int </td></tr>
<tr><td align="left" balign="left"> + createCompatibleBuffer() : BufferedImage </td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="9.0"> + createCompatibleBuffer(width : int, height : int) : BufferedImage </font></td></tr>
<tr><td align="left" balign="left"> + createCompatibleBuffer(width : int, height : int, stride : int) : BufferedImage </td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="9.0"> + createCompatibleBuffer(width : int, height : int, stride : int, backed : byte[]) : BufferedImage </font></td></tr>
<tr><td align="left" balign="left"> + flushScreen(compatible : BufferedImage) </td></tr>
<tr><td align="left" balign="left"> + setFlushEnabled(rly : boolean) </td></tr>
<tr><td align="left" balign="left"> + storeData() </td></tr>
<tr><td align="left" balign="left"> + restoreData() </td></tr>
<tr><td align="left" balign="left"> + clear() </td></tr>
<tr><td align="left" balign="left"> + getDisplay() : DisplayInterface </td></tr>
<tr><td align="left" balign="left"> + getFixedInfo() : NativeFramebuffer.fb_fix_screeninfo </td></tr>
<tr><td align="left" balign="left"> + getVariableInfo() : NativeFramebuffer.fb_var_screeninfo </td></tr>
<tr><td align="left" balign="left"> + getDevice() : NativeFramebuffer </td></tr>
<tr><td align="left" balign="left"> + getMemory() : Pointer </td></tr>
<tr><td align="left" balign="left"> + getBufferSize() : long </td></tr>
<tr><td align="left" balign="left"> # setDeviceClose(rly : boolean) </td></tr>
		</table></td></tr>
		</table>>, URL="./LinuxFramebuffer.html", fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// ev3dev.hardware.display.spi.FramebufferProvider
	c3811 [label=<<table title="ev3dev.hardware.display.spi.FramebufferProvider" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./spi/FramebufferProvider.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> FramebufferProvider </td></tr>
<tr><td align="center" balign="center"><font point-size="7.0"> ev3dev.hardware.display.spi </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + load(fb : ev3dev.utils.io.NativeFramebuffer, disp : ev3dev.hardware.display.DisplayInterface) : ev3dev.hardware.display.JavaFramebuffer </td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="9.0"> + createFramebuffer(fb : ev3dev.utils.io.NativeFramebuffer, disp : ev3dev.hardware.display.DisplayInterface) : ev3dev.hardware.display.JavaFramebuffer </font></td></tr>
		</table></td></tr>
		</table>>, URL="./spi/FramebufferProvider.html", fontname="Helvetica", fontcolor="black", fontsize=9.0];
	//ev3dev.hardware.display.LinuxFramebuffer implements ev3dev.hardware.display.JavaFramebuffer
	c3803:p -> c3804:p [dir=back,arrowtail=empty,style=dashed];
	// ev3dev.actuators.LCDStretch NAVASSOC ev3dev.hardware.display.JavaFramebuffer
	c3779:p -> c3803:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// ev3dev.hardware.display.DisplayInterface NAVASSOC ev3dev.hardware.display.JavaFramebuffer
	c3801:p -> c3803:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// ev3dev.hardware.display.LinuxFramebuffer NAVASSOC ev3dev.hardware.display.DisplayInterface
	c3804:p -> c3801:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// ev3dev.actuators.LCDStretch DEPEND ev3dev.hardware.display.JavaFramebuffer
	c3779:p -> c3803:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open, style=dashed];
	// ev3dev.hardware.display.spi.FramebufferProvider DEPEND ev3dev.hardware.display.DisplayInterface
	c3811:p -> c3801:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open, style=dashed];
	// ev3dev.hardware.display.spi.FramebufferProvider DEPEND ev3dev.hardware.display.JavaFramebuffer
	c3811:p -> c3803:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open, style=dashed];
}

