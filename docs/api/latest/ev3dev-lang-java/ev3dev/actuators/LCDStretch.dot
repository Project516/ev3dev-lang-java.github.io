#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version R5_6-24-gf6e263 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="Helvetica",fontsize=10,labelfontname="Helvetica",labelfontsize=10];
	node [fontname="Helvetica",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	// ev3dev.actuators.LCDStretch
	c4004 [label=<<table title="ev3dev.actuators.LCDStretch" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" bgcolor="lemonChiffon" href="./LCDStretch.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> LCDStretch </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + EV3DEV_LCD_KEY : String </td></tr>
<tr><td align="left" balign="left"> + EV3DEV_LCD_DEFAULT : String </td></tr>
<tr><td align="left" balign="left"> + EV3DEV_LCD_MODE_KEY : String </td></tr>
<tr><td align="left" balign="left"> - log : Logger </td></tr>
<tr><td align="left" balign="left"> - fb : JavaFramebuffer </td></tr>
<tr><td align="left" balign="left"> - image : BufferedImage </td></tr>
<tr><td align="left" balign="left"> - g2d : Graphics2D </td></tr>
<tr><td align="left" balign="left"> - timer : Timer </td></tr>
<tr><td align="left" balign="left"> - timer_run : boolean </td></tr>
<tr><td align="left" balign="left"> - timer_msec : int </td></tr>
<tr><td align="left" balign="left"> - stroke : int </td></tr>
<tr><td align="left" balign="left"> - instance : LCDStretch </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - LCDStretch() </td></tr>
<tr><td align="left" balign="left"> + getInstance() : GraphicsLCD </td></tr>
<tr><td align="left" balign="left"> + getFramebuffer() : JavaFramebuffer </td></tr>
<tr><td align="left" balign="left"> + flush() </td></tr>
<tr><td align="left" balign="left"> + translate(x : int, y : int) </td></tr>
<tr><td align="left" balign="left"> + getFont() : Font </td></tr>
<tr><td align="left" balign="left"> + setFont(font : Font) </td></tr>
<tr><td align="left" balign="left"> + getTranslateX() : int </td></tr>
<tr><td align="left" balign="left"> + getTranslateY() : int </td></tr>
<tr><td align="left" balign="left"> + setColor(rgb : int) </td></tr>
<tr><td align="left" balign="left"> + setColor(r : int, g : int, b : int) </td></tr>
<tr><td align="left" balign="left"> + setPixel(x : int, y : int, color : int) </td></tr>
<tr><td align="left" balign="left"> + getPixel(x : int, y : int) : int </td></tr>
<tr><td align="left" balign="left"> + drawString(str : String, x : int, y : int, anchor : int, inverted : boolean) </td></tr>
<tr><td align="left" balign="left"> + drawString(str : String, x : int, y : int, anchor : int) </td></tr>
<tr><td align="left" balign="left"> + drawSubstring(str : String, offset : int, len : int, x : int, y : int, anchor : int) </td></tr>
<tr><td align="left" balign="left"> + drawChar(character : char, x : int, y : int, anchor : int) </td></tr>
<tr><td align="left" balign="left"> + drawChars(data : char[], offset : int, length : int, x : int, y : int, anchor : int) </td></tr>
<tr><td align="left" balign="left"> + getStrokeStyle() : int </td></tr>
<tr><td align="left" balign="left"> + setStrokeStyle(i : int) </td></tr>
<tr><td align="left" balign="left"> + drawRegionRop(src : Image, sx : int, sy : int, w : int, h : int, x : int, y : int, anchor : int, rop : int) </td></tr>
<tr><td align="left" balign="left"> + drawRegionRop(src : Image, sx : int, sy : int, w : int, h : int, transform : int, x : int, y : int, anchor : int, rop : int) </td></tr>
<tr><td align="left" balign="left"> + drawRegion(src : Image, sx : int, sy : int, w : int, h : int, transform : int, x : int, y : int, anchor : int) </td></tr>
<tr><td align="left" balign="left"> + drawImage(image : Image, i : int, i1 : int, i2 : int) </td></tr>
<tr><td align="left" balign="left"> + drawLine(x1 : int, y1 : int, x2 : int, y2 : int) </td></tr>
<tr><td align="left" balign="left"> + fillRect(x : int, y : int, width : int, height : int) </td></tr>
<tr><td align="left" balign="left"> + copyArea(sx : int, sy : int, w : int, h : int, x : int, y : int, anchor : int) </td></tr>
<tr><td align="left" balign="left"> - adjustX(x : int, w : int, anchor : int) : int </td></tr>
<tr><td align="left" balign="left"> - adjustY(y : int, h : int, anchor : int) : int </td></tr>
<tr><td align="left" balign="left"> + drawRoundRect(x : int, y : int, width : int, height : int, arcWidth : int, arcHeight : int) </td></tr>
<tr><td align="left" balign="left"> + drawRect(x : int, y : int, width : int, height : int) </td></tr>
<tr><td align="left" balign="left"> + drawArc(x : int, y : int, width : int, height : int, startAngle : int, arcAngle : int) </td></tr>
<tr><td align="left" balign="left"> + fillArc(x : int, y : int, width : int, height : int, startAngle : int, arcAngle : int) </td></tr>
<tr><td align="left" balign="left"> + refresh() </td></tr>
<tr><td align="left" balign="left"> + clear() </td></tr>
<tr><td align="left" balign="left"> + getWidth() : int </td></tr>
<tr><td align="left" balign="left"> + getHeight() : int </td></tr>
<tr><td align="left" balign="left"> + getDisplay() : byte[] </td></tr>
<tr><td align="left" balign="left"> + getHWDisplay() : byte[] </td></tr>
<tr><td align="left" balign="left"> + setContrast(i : int) </td></tr>
<tr><td align="left" balign="left"> - lejos2rgb(src : byte[], width : int, height : int) : BufferedImage </td></tr>
<tr><td align="left" balign="left"> - any2rgb(img : Image) : BufferedImage </td></tr>
<tr><td align="left" balign="left"> - any2lejos(img : BufferedImage) : byte[] </td></tr>
<tr><td align="left" balign="left"> - java_lejos_flip(in : BufferedImage, out : BufferedImage) : BufferedImage </td></tr>
<tr><td align="left" balign="left"> + bitBlt(src : byte[], sw : int, sh : int, sx : int, sy : int, dx : int, dy : int, w : int, h : int, rop : int) </td></tr>
<tr><td align="left" balign="left"> + bitBlt(src : byte[], sw : int, sh : int, sx : int, sy : int, dst : byte[], dw : int, dh : int, dx : int, dy : int, w : int, h : int, rop : int) </td></tr>
<tr><td align="left" balign="left"> - bitBlt(src : BufferedImage, sx : int, sy : int, dst : BufferedImage, dx : int, dy : int, w : int, h : int, rop : int) </td></tr>
<tr><td align="left" balign="left"> + setAutoRefresh(b : boolean) </td></tr>
<tr><td align="left" balign="left"> + setAutoRefreshPeriod(i : int) : int </td></tr>
<tr><td align="left" balign="left"> - timerUpdate() </td></tr>
		</table></td></tr>
		</table>>, URL="./LCDStretch.html", fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// ev3dev.hardware.EV3DevDevice
	c4015 [label=<<table title="ev3dev.hardware.EV3DevDevice" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../hardware/EV3DevDevice.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Helvetica-Oblique"> EV3DevDevice </font></td></tr>
<tr><td align="center" balign="center"><font point-size="7.0"> ev3dev.hardware </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - LOGGER : Logger </td></tr>
<tr><td align="left" balign="left"> # ev3DevProperties : java.util.Properties </td></tr>
<tr><td align="left" balign="left"> # CURRENT_PLATFORM : ev3dev.hardware.EV3DevPlatform </td></tr>
<tr><td align="left" balign="left"> # LEGO_PORT : java.lang.String </td></tr>
<tr><td align="left" balign="left"> # ADDRESS : java.lang.String </td></tr>
<tr><td align="left" balign="left"> # LEGO_SENSOR : java.lang.String </td></tr>
<tr><td align="left" balign="left"> # MODE : java.lang.String </td></tr>
<tr><td align="left" balign="left"> # DEVICE : java.lang.String </td></tr>
<tr><td align="left" balign="left"> # PATH_DEVICE : java.io.File </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + EV3DevDevice() </td></tr>
<tr><td align="left" balign="left"> # detect(type : java.lang.String, portName : java.lang.String) </td></tr>
<tr><td align="left" balign="left"> # getStringAttribute(attribute : java.lang.String) : java.lang.String </td></tr>
<tr><td align="left" balign="left"> # getIntegerAttribute(attribute : java.lang.String) : int </td></tr>
<tr><td align="left" balign="left"> # setStringAttribute(attribute : java.lang.String, value : java.lang.String) </td></tr>
<tr><td align="left" balign="left"> # setIntegerAttribute(attribute : java.lang.String, value : int) </td></tr>
		</table></td></tr>
		</table>>, URL="../hardware/EV3DevDevice.html", fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// ev3dev.hardware.display.JavaFramebuffer
	c4028 [label=<<table title="ev3dev.hardware.display.JavaFramebuffer" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../hardware/display/JavaFramebuffer.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> JavaFramebuffer </td></tr>
<tr><td align="center" balign="center"><font point-size="7.0"> ev3dev.hardware.display </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="9.0"> + getWidth() : int </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="9.0"> + getHeight() : int </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="9.0"> + getStride() : int </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="9.0"> + createCompatibleBuffer() : java.awt.image.BufferedImage </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="9.0"> + createCompatibleBuffer(width : int, height : int) : java.awt.image.BufferedImage </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="9.0"> + createCompatibleBuffer(width : int, height : int, stride : int) : java.awt.image.BufferedImage </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="9.0"> + createCompatibleBuffer(width : int, height : int, stride : int, backed : byte[]) : java.awt.image.BufferedImage </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="9.0"> + flushScreen(compatible : java.awt.image.BufferedImage) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="9.0"> + setFlushEnabled(rly : boolean) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="9.0"> + storeData() </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="9.0"> + restoreData() </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="9.0"> + clear() </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="9.0"> + getDisplay() : ev3dev.hardware.display.DisplayInterface </font></td></tr>
		</table></td></tr>
		</table>>, URL="../hardware/display/JavaFramebuffer.html", fontname="Helvetica", fontcolor="black", fontsize=9.0];
	//ev3dev.actuators.LCDStretch extends ev3dev.hardware.EV3DevDevice
	c4015:p -> c4004:p [dir=back,arrowtail=empty];
	// ev3dev.actuators.LCDStretch NAVASSOC ev3dev.hardware.display.JavaFramebuffer
	c4004:p -> c4028:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// ev3dev.actuators.LCDStretch DEPEND ev3dev.hardware.display.JavaFramebuffer
	c4004:p -> c4028:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open, style=dashed];
}

