#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version R5_6-24-gf6e263 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="Helvetica",fontsize=10,labelfontname="Helvetica",labelfontsize=10];
	node [fontname="Helvetica",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	// ev3dev.sensors.slamtec.service.GrowQueue_I32
	c86 [label=<<table title="ev3dev.sensors.slamtec.service.GrowQueue_I32" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" bgcolor="lemonChiffon" href="./GrowQueue_I32.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> GrowQueue_I32 </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + data : int[] </td></tr>
<tr><td align="left" balign="left"> + size : int </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + GrowQueue_I32(maxSize : int) </td></tr>
<tr><td align="left" balign="left"> + GrowQueue_I32() </td></tr>
<tr><td align="left" balign="left"> + reset() </td></tr>
<tr><td align="left" balign="left"> + addAll(queue : GrowQueue_I32) </td></tr>
<tr><td align="left" balign="left"> + addAll(array : int[], startIndex : int, endIndex : int) </td></tr>
<tr><td align="left" balign="left"> + add(value : int) </td></tr>
<tr><td align="left" balign="left"> + push(val : int) </td></tr>
<tr><td align="left" balign="left"> + get(index : int) : int </td></tr>
<tr><td align="left" balign="left"> + unsafe_get(index : int) : int </td></tr>
<tr><td align="left" balign="left"> + set(index : int, value : int) </td></tr>
<tr><td align="left" balign="left"> + setTo(original : GrowQueue_I32) </td></tr>
<tr><td align="left" balign="left"> + remove(index : int) </td></tr>
<tr><td align="left" balign="left"> + insert(index : int, value : int) </td></tr>
<tr><td align="left" balign="left"> + removeHead(total : int) </td></tr>
<tr><td align="left" balign="left"> + removeTail() : int </td></tr>
<tr><td align="left" balign="left"> + resize(size : int) </td></tr>
<tr><td align="left" balign="left"> + setMaxSize(size : int) </td></tr>
<tr><td align="left" balign="left"> + fill(value : int) </td></tr>
<tr><td align="left" balign="left"> + size() : int </td></tr>
<tr><td align="left" balign="left"> + pop() : int </td></tr>
<tr><td align="left" balign="left"> + indexOf(value : int) : int </td></tr>
		</table></td></tr>
		</table>>, URL="./GrowQueue_I32.html", fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// ev3dev.sensors.slamtec.service.RpLidarScan
	c97 [label=<<table title="ev3dev.sensors.slamtec.service.RpLidarScan" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./RpLidarScan.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> RpLidarScan </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + N : int </td></tr>
<tr><td align="left" balign="left"> + quality : int[] </td></tr>
<tr><td align="left" balign="left"> + distance : int[] </td></tr>
<tr><td align="left" balign="left"> + time : long[] </td></tr>
<tr><td align="left" balign="left"> + used : GrowQueue_I32 </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + RpLidarScan() </td></tr>
<tr><td align="left" balign="left"> + set(scan : RpLidarScan) </td></tr>
<tr><td align="left" balign="left"> + convertMeters(meters : double[]) </td></tr>
<tr><td align="left" balign="left"> + convertMilliMeters(meters : double[]) </td></tr>
<tr><td align="left" balign="left"> + reset() </td></tr>
<tr><td align="left" balign="left"> + isInvalid(which : int) : boolean </td></tr>
		</table></td></tr>
		</table>>, URL="./RpLidarScan.html", fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// ev3dev.sensors.slamtec.service.RpLidarScan NAVASSOC ev3dev.sensors.slamtec.service.GrowQueue_I32
	c97:p -> c86:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
}

