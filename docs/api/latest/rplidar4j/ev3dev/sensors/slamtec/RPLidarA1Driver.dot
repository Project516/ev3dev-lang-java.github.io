#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version R5_6-24-gf6e263 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="Helvetica",fontsize=10,labelfontname="Helvetica",labelfontsize=10];
	node [fontname="Helvetica",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	// ev3dev.sensors.slamtec.RPLidarA1Driver
	c117 [label=<<table title="ev3dev.sensors.slamtec.RPLidarA1Driver" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" bgcolor="lemonChiffon" href="./RPLidarA1Driver.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> RPLidarA1Driver </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - closingStatus : AtomicBoolean </td></tr>
<tr><td align="left" balign="left"> - driver : RpLidarLowLevelDriver </td></tr>
<tr><td align="left" balign="left"> - USBPort : String </td></tr>
<tr><td align="left" balign="left"> - counter : int </td></tr>
<tr><td align="left" balign="left"> - flag : boolean </td></tr>
<tr><td align="left" balign="left"> - distancesTemp : List&lt;ScanDistance&gt; </td></tr>
<tr><td align="left" balign="left"> - scan : Scan </td></tr>
<tr><td align="left" balign="left"> - listenerList : List&lt;RPLidarProviderListener&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + RPLidarA1Driver(USBPort : String) </td></tr>
<tr><td align="left" balign="left"> + init() </td></tr>
<tr><td align="left" balign="left"> + scan() : Scan </td></tr>
<tr><td align="left" balign="left"> + close() </td></tr>
<tr><td align="left" balign="left"> + addListener(listener : RPLidarProviderListener) </td></tr>
<tr><td align="left" balign="left"> + removeListener(listener : RPLidarProviderListener) </td></tr>
<tr><td align="left" balign="left"> + handleMeasurement(measurement : RpLidarMeasurement) </td></tr>
<tr><td align="left" balign="left"> + containAngle(list : List&lt;ScanDistance&gt;, angle : int) : boolean </td></tr>
<tr><td align="left" balign="left"> + handleDeviceHealth(health : RpLidarHeath) </td></tr>
<tr><td align="left" balign="left"> + handleDeviceInfo(info : RpLidarDeviceInfo) </td></tr>
		</table></td></tr>
		</table>>, URL="./RPLidarA1Driver.html", fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// ev3dev.sensors.slamtec.RPLidarProvider
	c122 [label=<<table title="ev3dev.sensors.slamtec.RPLidarProvider" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./RPLidarProvider.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> RPLidarProvider </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + SCAN_DEGREES : int </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="9.0"> + init() </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="9.0"> + scan() : Scan </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="9.0"> + close() </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="9.0"> + addListener(listener : RPLidarProviderListener) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="9.0"> + removeListener(listener : RPLidarProviderListener) </font></td></tr>
		</table></td></tr>
		</table>>, URL="./RPLidarProvider.html", fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// ev3dev.sensors.slamtec.RPLidarProviderListener
	c123 [label=<<table title="ev3dev.sensors.slamtec.RPLidarProviderListener" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./RPLidarProviderListener.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> RPLidarProviderListener </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="9.0"> + scanFinished(scan : Scan) </font></td></tr>
		</table></td></tr>
		</table>>, URL="./RPLidarProviderListener.html", fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// ev3dev.sensors.slamtec.model.Scan
	c124 [label=<<table title="ev3dev.sensors.slamtec.model.Scan" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./model/Scan.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Scan </td></tr>
<tr><td align="center" balign="center"><font point-size="7.0"> ev3dev.sensors.slamtec.model </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - distances : java.util.List&lt;ev3dev.sensors.slamtec.model.ScanDistance&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Scan(distances : java.util.List&lt;ev3dev.sensors.slamtec.model.ScanDistance&gt;) </td></tr>
		</table></td></tr>
		</table>>, URL="./model/Scan.html", fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// ev3dev.sensors.slamtec.model.ScanDistance
	c125 [label=<<table title="ev3dev.sensors.slamtec.model.ScanDistance" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./model/ScanDistance.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> ScanDistance </td></tr>
<tr><td align="center" balign="center"><font point-size="7.0"> ev3dev.sensors.slamtec.model </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - angle : int </td></tr>
<tr><td align="left" balign="left"> - distance : double </td></tr>
<tr><td align="left" balign="left"> - quality : int </td></tr>
<tr><td align="left" balign="left"> - start : boolean </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + ScanDistance() </td></tr>
		</table></td></tr>
		</table>>, URL="./model/ScanDistance.html", fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// ev3dev.sensors.slamtec.service.RpLidarDeviceInfo
	c127 [label=<<table title="ev3dev.sensors.slamtec.service.RpLidarDeviceInfo" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./service/RpLidarDeviceInfo.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> RpLidarDeviceInfo </td></tr>
<tr><td align="center" balign="center"><font point-size="7.0"> ev3dev.sensors.slamtec.service </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + model : int </td></tr>
<tr><td align="left" balign="left"> + firmware_minor : int </td></tr>
<tr><td align="left" balign="left"> + firmware_major : int </td></tr>
<tr><td align="left" balign="left"> + hardware : int </td></tr>
<tr><td align="left" balign="left"> + serialNumber : byte[] </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + RpLidarDeviceInfo() </td></tr>
<tr><td align="left" balign="left"> + print() </td></tr>
		</table></td></tr>
		</table>>, URL="./service/RpLidarDeviceInfo.html", fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// ev3dev.sensors.slamtec.service.RpLidarHeath
	c128 [label=<<table title="ev3dev.sensors.slamtec.service.RpLidarHeath" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./service/RpLidarHeath.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> RpLidarHeath </td></tr>
<tr><td align="center" balign="center"><font point-size="7.0"> ev3dev.sensors.slamtec.service </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + status : int </td></tr>
<tr><td align="left" balign="left"> + error_code : int </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + RpLidarHeath() </td></tr>
<tr><td align="left" balign="left"> + print() </td></tr>
		</table></td></tr>
		</table>>, URL="./service/RpLidarHeath.html", fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// ev3dev.sensors.slamtec.service.RpLidarListener
	c129 [label=<<table title="ev3dev.sensors.slamtec.service.RpLidarListener" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./service/RpLidarListener.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> RpLidarListener </td></tr>
<tr><td align="center" balign="center"><font point-size="7.0"> ev3dev.sensors.slamtec.service </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="9.0"> + handleMeasurement(measurement : ev3dev.sensors.slamtec.service.RpLidarMeasurement) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="9.0"> + handleDeviceHealth(health : ev3dev.sensors.slamtec.service.RpLidarHeath) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="9.0"> + handleDeviceInfo(info : ev3dev.sensors.slamtec.service.RpLidarDeviceInfo) </font></td></tr>
		</table></td></tr>
		</table>>, URL="./service/RpLidarListener.html", fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// ev3dev.sensors.slamtec.service.RpLidarLowLevelDriver
	c130 [label=<<table title="ev3dev.sensors.slamtec.service.RpLidarLowLevelDriver" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./service/RpLidarLowLevelDriver.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> RpLidarLowLevelDriver </td></tr>
<tr><td align="center" balign="center"><font point-size="7.0"> ev3dev.sensors.slamtec.service </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + SYNC_BYTE0 : byte </td></tr>
<tr><td align="left" balign="left"> + SYNC_BYTE1 : byte </td></tr>
<tr><td align="left" balign="left"> + STOP : byte </td></tr>
<tr><td align="left" balign="left"> + RESET : byte </td></tr>
<tr><td align="left" balign="left"> + SCAN : byte </td></tr>
<tr><td align="left" balign="left"> + FORCE_SCAN : byte </td></tr>
<tr><td align="left" balign="left"> + GET_INFO : byte </td></tr>
<tr><td align="left" balign="left"> + GET_HEALTH : byte </td></tr>
<tr><td align="left" balign="left"> + RCV_INFO : byte </td></tr>
<tr><td align="left" balign="left"> + RCV_HEALTH : byte </td></tr>
<tr><td align="left" balign="left"> + RCV_SCAN : byte </td></tr>
<tr><td align="left" balign="left"> ~ serialPort : SerialPort </td></tr>
<tr><td align="left" balign="left"> ~ in : java.io.InputStream </td></tr>
<tr><td align="left" balign="left"> ~ out : java.io.OutputStream </td></tr>
<tr><td align="left" balign="left"> ~ dataOut : byte[] </td></tr>
<tr><td align="left" balign="left"> ~ verbose : boolean </td></tr>
<tr><td align="left" balign="left"> - readThread : ev3dev.sensors.slamtec.service.RpLidarLowLevelDriver.ReadSerialThread </td></tr>
<tr><td align="left" balign="left"> ~ health : ev3dev.sensors.slamtec.service.RpLidarHeath </td></tr>
<tr><td align="left" balign="left"> ~ deviceInfo : ev3dev.sensors.slamtec.service.RpLidarDeviceInfo </td></tr>
<tr><td align="left" balign="left"> ~ measurement : ev3dev.sensors.slamtec.service.RpLidarMeasurement </td></tr>
<tr><td align="left" balign="left"> ~ listener : ev3dev.sensors.slamtec.service.RpLidarListener </td></tr>
<tr><td align="left" balign="left"> ~ scanning : boolean </td></tr>
<tr><td align="left" balign="left"> ~ lastReceived : int </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + RpLidarLowLevelDriver(portName : java.lang.String, listener : ev3dev.sensors.slamtec.service.RpLidarListener) </td></tr>
<tr><td align="left" balign="left"> + pause(milli : long) </td></tr>
<tr><td align="left" balign="left"> + shutdown() </td></tr>
<tr><td align="left" balign="left"> + sendScan(timeout : long) : boolean </td></tr>
<tr><td align="left" balign="left"> + sendStop() </td></tr>
<tr><td align="left" balign="left"> + sendReset() </td></tr>
<tr><td align="left" balign="left"> + sendGetInfo(timeout : long) : boolean </td></tr>
<tr><td align="left" balign="left"> + sendGetHealth(timeout : long) : boolean </td></tr>
<tr><td align="left" balign="left"> # sendBlocking(command : byte, expected : byte, timeout : long) : boolean </td></tr>
<tr><td align="left" balign="left"> # sendNoPayLoad(command : byte) </td></tr>
<tr><td align="left" balign="left"> # parseData(data : byte[], length : int) : int </td></tr>
<tr><td align="left" balign="left"> # parsePacket(data : byte[], offset : int, length : int, type : byte) : boolean </td></tr>
<tr><td align="left" balign="left"> # parseHealth(data : byte[], offset : int, length : int) : boolean </td></tr>
<tr><td align="left" balign="left"> # parseDeviceInfo(data : byte[], offset : int, length : int) : boolean </td></tr>
<tr><td align="left" balign="left"> # parseScan(data : byte[], offset : int, length : int) : boolean </td></tr>
<tr><td align="left" balign="left"> + setVerbose(verbose : boolean) </td></tr>
		</table></td></tr>
		</table>>, URL="./service/RpLidarLowLevelDriver.html", fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// ev3dev.sensors.slamtec.service.RpLidarMeasurement
	c132 [label=<<table title="ev3dev.sensors.slamtec.service.RpLidarMeasurement" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./service/RpLidarMeasurement.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> RpLidarMeasurement </td></tr>
<tr><td align="center" balign="center"><font point-size="7.0"> ev3dev.sensors.slamtec.service </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + start : boolean </td></tr>
<tr><td align="left" balign="left"> + quality : int </td></tr>
<tr><td align="left" balign="left"> + angle : int </td></tr>
<tr><td align="left" balign="left"> + distance : int </td></tr>
<tr><td align="left" balign="left"> + timeMilli : long </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + RpLidarMeasurement() </td></tr>
<tr><td align="left" balign="left"> + isInvalid() : boolean </td></tr>
		</table></td></tr>
		</table>>, URL="./service/RpLidarMeasurement.html", fontname="Helvetica", fontcolor="black", fontsize=9.0];
	//ev3dev.sensors.slamtec.RPLidarA1Driver implements ev3dev.sensors.slamtec.RPLidarProvider
	c122:p -> c117:p [dir=back,arrowtail=empty,style=dashed];
	//ev3dev.sensors.slamtec.RPLidarA1Driver implements ev3dev.sensors.slamtec.service.RpLidarListener
	c129:p -> c117:p [dir=back,arrowtail=empty,style=dashed];
	// ev3dev.sensors.slamtec.RPLidarA1Driver NAVASSOC ev3dev.sensors.slamtec.service.RpLidarLowLevelDriver
	c117:p -> c130:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// ev3dev.sensors.slamtec.RPLidarA1Driver NAVASSOC ev3dev.sensors.slamtec.model.ScanDistance
	c117:p -> c125:p [taillabel="", label="", headlabel="*", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// ev3dev.sensors.slamtec.RPLidarA1Driver NAVASSOC ev3dev.sensors.slamtec.model.Scan
	c117:p -> c124:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// ev3dev.sensors.slamtec.RPLidarA1Driver NAVASSOC ev3dev.sensors.slamtec.RPLidarProviderListener
	c117:p -> c123:p [taillabel="", label="", headlabel="*", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// ev3dev.sensors.slamtec.model.Scan NAVASSOC ev3dev.sensors.slamtec.model.ScanDistance
	c124:p -> c125:p [taillabel="", label="", headlabel="*", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// ev3dev.sensors.slamtec.service.RpLidarLowLevelDriver NAVASSOC ev3dev.sensors.slamtec.service.RpLidarHeath
	c130:p -> c128:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// ev3dev.sensors.slamtec.service.RpLidarLowLevelDriver NAVASSOC ev3dev.sensors.slamtec.service.RpLidarDeviceInfo
	c130:p -> c127:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// ev3dev.sensors.slamtec.service.RpLidarLowLevelDriver NAVASSOC ev3dev.sensors.slamtec.service.RpLidarMeasurement
	c130:p -> c132:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// ev3dev.sensors.slamtec.service.RpLidarLowLevelDriver NAVASSOC ev3dev.sensors.slamtec.service.RpLidarListener
	c130:p -> c129:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// ev3dev.sensors.slamtec.RPLidarA1Driver DEPEND ev3dev.sensors.slamtec.model.Scan
	c117:p -> c124:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open, style=dashed];
	// ev3dev.sensors.slamtec.RPLidarA1Driver DEPEND ev3dev.sensors.slamtec.service.RpLidarDeviceInfo
	c117:p -> c127:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open, style=dashed];
	// ev3dev.sensors.slamtec.RPLidarA1Driver DEPEND ev3dev.sensors.slamtec.service.RpLidarHeath
	c117:p -> c128:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open, style=dashed];
	// ev3dev.sensors.slamtec.RPLidarA1Driver DEPEND ev3dev.sensors.slamtec.service.RpLidarMeasurement
	c117:p -> c132:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open, style=dashed];
	// ev3dev.sensors.slamtec.RPLidarProvider DEPEND ev3dev.sensors.slamtec.model.Scan
	c122:p -> c124:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open, style=dashed];
	// ev3dev.sensors.slamtec.RPLidarProviderListener DEPEND ev3dev.sensors.slamtec.model.Scan
	c123:p -> c124:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open, style=dashed];
}

