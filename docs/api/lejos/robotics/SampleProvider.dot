#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version R5_6-24-gf6e263 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="Helvetica",fontsize=10,labelfontname="Helvetica",labelfontsize=10];
	node [fontname="Helvetica",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	// ev3dev.hardware.sensor.SensorMode
	c4919 [label=<<table title="ev3dev.hardware.sensor.SensorMode" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../../ev3dev/hardware/sensor/SensorMode.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> SensorMode </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + getName() : String </font></td></tr>
		</table></td></tr>
		</table>>, URL="../../ev3dev/hardware/sensor/SensorMode.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// ev3dev.hardware.sensor.ev3.EV3DevSensorMode
	c4926 [label=<<table title="ev3dev.hardware.sensor.ev3.EV3DevSensorMode" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../../ev3dev/hardware/sensor/ev3/EV3DevSensorMode.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Helvetica-Oblique"> EV3DevSensorMode </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> # VALUE0 : String </td></tr>
<tr><td align="left" balign="left"> # VALUE1 : String </td></tr>
<tr><td align="left" balign="left"> # VALUE2 : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + EV3DevSensorMode() </td></tr>
		</table></td></tr>
		</table>>, URL="../../ev3dev/hardware/sensor/ev3/EV3DevSensorMode.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.robotics.SampleProvider
	c4947 [label=<<table title="lejos.robotics.SampleProvider" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" bgcolor="lemonChiffon" href="./SampleProvider.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> SampleProvider </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + sampleSize() : int </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + fetchSample(sample : float[], offset : int) </font></td></tr>
		</table></td></tr>
		</table>>, URL="./SampleProvider.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.robotics.filter.AbstractFilter
	c4951 [label=<<table title="lejos.robotics.filter.AbstractFilter" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./filter/AbstractFilter.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Helvetica-Oblique"> AbstractFilter </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> # source : SampleProvider </td></tr>
<tr><td align="left" balign="left"> # sampleSize : int </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + AbstractFilter(source : SampleProvider) </td></tr>
<tr><td align="left" balign="left"> + sampleSize() : int </td></tr>
<tr><td align="left" balign="left"> + fetchSample(sample : float[], offset : int) </td></tr>
		</table></td></tr>
		</table>>, URL="./filter/AbstractFilter.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.robotics.filter.ConcatenationFilter
	c4952 [label=<<table title="lejos.robotics.filter.ConcatenationFilter" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./filter/ConcatenationFilter.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> ConcatenationFilter </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - source1 : SampleProvider </td></tr>
<tr><td align="left" balign="left"> - source2 : SampleProvider </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + ConcatenationFilter(source1 : SampleProvider, source2 : SampleProvider) </td></tr>
<tr><td align="left" balign="left"> + sampleSize() : int </td></tr>
<tr><td align="left" balign="left"> + fetchSample(sample : float[], offset : int) </td></tr>
		</table></td></tr>
		</table>>, URL="./filter/ConcatenationFilter.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.robotics.filter.SubscribedProvider
	c4969 [label=<<table title="lejos.robotics.filter.SubscribedProvider" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./filter/SubscribedProvider.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> SubscribedProvider </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> # formatter : DateFormat </td></tr>
<tr><td align="left" balign="left"> - sampleSize : int </td></tr>
<tr><td align="left" balign="left"> - latest : float[] </td></tr>
<tr><td align="left" balign="left"> - source : PublishedSource </td></tr>
<tr><td align="left" balign="left"> - dis : DataInputStream </td></tr>
<tr><td align="left" balign="left"> - timeStamp : long </td></tr>
<tr><td align="left" balign="left"> - host : String </td></tr>
<tr><td align="left" balign="left"> - name : String </td></tr>
<tr><td align="left" balign="left"> - active : boolean </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + SubscribedProvider(dis : DataInputStream, source : PublishedSource) </td></tr>
<tr><td align="left" balign="left"> + sampleSize() : int </td></tr>
<tr><td align="left" balign="left"> + fetchSample(sample : float[], offset : int) </td></tr>
<tr><td align="left" balign="left"> + getSource() : PublishedSource </td></tr>
<tr><td align="left" balign="left"> + getHost() : String </td></tr>
<tr><td align="left" balign="left"> + getName() : String </td></tr>
<tr><td align="left" balign="left"> + getTimeStamp() : long </td></tr>
<tr><td align="left" balign="left"> + isActive() : boolean </td></tr>
<tr><td align="left" balign="left"> + getTime() : String </td></tr>
		</table></td></tr>
		</table>>, URL="./filter/SubscribedProvider.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	//ev3dev.hardware.sensor.SensorMode implements lejos.robotics.SampleProvider
	c4947:p -> c4919:p [dir=back,arrowtail=empty,style=dashed];
	//ev3dev.hardware.sensor.ev3.EV3DevSensorMode implements lejos.robotics.SampleProvider
	c4947:p -> c4926:p [dir=back,arrowtail=empty,style=dashed];
	//ev3dev.hardware.sensor.ev3.EV3DevSensorMode implements ev3dev.hardware.sensor.SensorMode
	c4919:p -> c4926:p [dir=back,arrowtail=empty,style=dashed];
	//lejos.robotics.filter.AbstractFilter implements lejos.robotics.SampleProvider
	c4947:p -> c4951:p [dir=back,arrowtail=empty,style=dashed];
	//lejos.robotics.filter.ConcatenationFilter implements lejos.robotics.SampleProvider
	c4947:p -> c4952:p [dir=back,arrowtail=empty,style=dashed];
	//lejos.robotics.filter.SubscribedProvider implements lejos.robotics.SampleProvider
	c4947:p -> c4969:p [dir=back,arrowtail=empty,style=dashed];
}

