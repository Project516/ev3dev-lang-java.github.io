#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version R5_6-24-gf6e263 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="Helvetica",fontsize=10,labelfontname="Helvetica",labelfontsize=10];
	node [fontname="Helvetica",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	// ev3dev.hardware.sensor.ev3.EV3ColorSensor
	c384 [label=<<table title="ev3dev.hardware.sensor.ev3.EV3ColorSensor" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./EV3ColorSensor.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> EV3ColorSensor </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> # colorMap : int[] </td></tr>
<tr><td align="left" balign="left"> # SWITCH_DELAY : int </td></tr>
<tr><td align="left" balign="left"> # COL_RESET : String </td></tr>
<tr><td align="left" balign="left"> # COL_REFLECT : String </td></tr>
<tr><td align="left" balign="left"> # COL_AMBIENT : String </td></tr>
<tr><td align="left" balign="left"> # COL_COLOR : String </td></tr>
<tr><td align="left" balign="left"> # COL_REFRAW : String </td></tr>
<tr><td align="left" balign="left"> # COL_RGBRAW : String </td></tr>
<tr><td align="left" balign="left"> # COL_CAL : String </td></tr>
<tr><td align="left" balign="left"> # lightColor : int[] </td></tr>
<tr><td align="left" balign="left"> # raw : short[] </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + EV3ColorSensor(sensorPort : String) </td></tr>
<tr><td align="left" balign="left"> - initModes() </td></tr>
<tr><td align="left" balign="left"> + getColorID() : int </td></tr>
<tr><td align="left" balign="left"> + setFloodlight(floodlight : boolean) </td></tr>
<tr><td align="left" balign="left"> + isFloodlightOn() : boolean </td></tr>
<tr><td align="left" balign="left"> + getFloodlight() : int </td></tr>
<tr><td align="left" balign="left"> + setFloodlight(color : int) : boolean </td></tr>
<tr><td align="left" balign="left"> + getColorIDMode() : SensorMode </td></tr>
<tr><td align="left" balign="left"> + getRedMode() : SensorMode </td></tr>
<tr><td align="left" balign="left"> + getAmbientMode() : SensorMode </td></tr>
<tr><td align="left" balign="left"> + getRGBMode() : SensorMode </td></tr>
		</table></td></tr>
		</table>>, URL="./EV3ColorSensor.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// ev3dev.hardware.sensor.ev3.EV3ColorSensor.ColorIDMode
	c385 [label=<<table title="ev3dev.hardware.sensor.ev3.EV3ColorSensor.ColorIDMode" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./EV3ColorSensor.ColorIDMode.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> ColorIDMode </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - pathDevice : File </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + ColorIDMode(pathDevice : File) </td></tr>
<tr><td align="left" balign="left"> + sampleSize() : int </td></tr>
<tr><td align="left" balign="left"> + fetchSample(sample : float[], offset : int) </td></tr>
<tr><td align="left" balign="left"> + getName() : String </td></tr>
		</table></td></tr>
		</table>>, URL="./EV3ColorSensor.ColorIDMode.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// ev3dev.hardware.sensor.ev3.EV3ColorSensor.RedMode
	c386 [label=<<table title="ev3dev.hardware.sensor.ev3.EV3ColorSensor.RedMode" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./EV3ColorSensor.RedMode.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> RedMode </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - toSI : float </td></tr>
<tr><td align="left" balign="left"> - pathDevice : File </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + RedMode(pathDevice : File) </td></tr>
<tr><td align="left" balign="left"> + sampleSize() : int </td></tr>
<tr><td align="left" balign="left"> + fetchSample(sample : float[], offset : int) </td></tr>
<tr><td align="left" balign="left"> + getName() : String </td></tr>
		</table></td></tr>
		</table>>, URL="./EV3ColorSensor.RedMode.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// ev3dev.hardware.sensor.ev3.EV3ColorSensor.AmbientMode
	c387 [label=<<table title="ev3dev.hardware.sensor.ev3.EV3ColorSensor.AmbientMode" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./EV3ColorSensor.AmbientMode.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> AmbientMode </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - toSI : float </td></tr>
<tr><td align="left" balign="left"> - pathDevice : File </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + AmbientMode(pathDevice : File) </td></tr>
<tr><td align="left" balign="left"> + sampleSize() : int </td></tr>
<tr><td align="left" balign="left"> + fetchSample(sample : float[], offset : int) </td></tr>
<tr><td align="left" balign="left"> + getName() : String </td></tr>
		</table></td></tr>
		</table>>, URL="./EV3ColorSensor.AmbientMode.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// ev3dev.hardware.sensor.ev3.EV3ColorSensor.RGBMode
	c388 [label=<<table title="ev3dev.hardware.sensor.ev3.EV3ColorSensor.RGBMode" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./EV3ColorSensor.RGBMode.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> RGBMode </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - toSI : float </td></tr>
<tr><td align="left" balign="left"> - pathDevice : File </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + RGBMode(pathDevice : File) </td></tr>
<tr><td align="left" balign="left"> + sampleSize() : int </td></tr>
<tr><td align="left" balign="left"> + fetchSample(sample : float[], offset : int) </td></tr>
<tr><td align="left" balign="left"> + getName() : String </td></tr>
		</table></td></tr>
		</table>>, URL="./EV3ColorSensor.RGBMode.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// ev3dev.hardware.sensor.ev3.EV3DevSensorMode
	c389 [label=<<table title="ev3dev.hardware.sensor.ev3.EV3DevSensorMode" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./EV3DevSensorMode.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Helvetica-Oblique"> EV3DevSensorMode </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> # VALUE0 : String </td></tr>
<tr><td align="left" balign="left"> # VALUE1 : String </td></tr>
<tr><td align="left" balign="left"> # VALUE2 : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + EV3DevSensorMode() </td></tr>
		</table></td></tr>
		</table>>, URL="./EV3DevSensorMode.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// ev3dev.hardware.sensor.ev3.EV3GyroSensor
	c390 [label=<<table title="ev3dev.hardware.sensor.ev3.EV3GyroSensor" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./EV3GyroSensor.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> EV3GyroSensor </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - SWITCHDELAY : long </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + EV3GyroSensor(sensorPort : String) </td></tr>
<tr><td align="left" balign="left"> + getAngleMode() : SampleProvider </td></tr>
<tr><td align="left" balign="left"> + reset() </td></tr>
<tr><td align="left" balign="left"> + getAngle() : int </td></tr>
		</table></td></tr>
		</table>>, URL="./EV3GyroSensor.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// ev3dev.hardware.sensor.ev3.EV3GyroSensor.AngleMode
	c391 [label=<<table title="ev3dev.hardware.sensor.ev3.EV3GyroSensor.AngleMode" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./EV3GyroSensor.AngleMode.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> AngleMode </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - MODE : int </td></tr>
<tr><td align="left" balign="left"> - toSI : float </td></tr>
<tr><td align="left" balign="left"> - pathDevice : File </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + AngleMode(pathDevice : File) </td></tr>
<tr><td align="left" balign="left"> + sampleSize() : int </td></tr>
<tr><td align="left" balign="left"> + fetchSample(sample : float[], offset : int) </td></tr>
<tr><td align="left" balign="left"> + getName() : String </td></tr>
		</table></td></tr>
		</table>>, URL="./EV3GyroSensor.AngleMode.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// ev3dev.hardware.sensor.ev3.EV3IRSensor
	c392 [label=<<table title="ev3dev.hardware.sensor.ev3.EV3IRSensor" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./EV3IRSensor.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> EV3IRSensor </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> # SWITCH_DELAY : int </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + EV3IRSensor(sensorPort : String) </td></tr>
<tr><td align="left" balign="left"> # init() </td></tr>
<tr><td align="left" balign="left"> + getDistanceMode() : SensorMode </td></tr>
		</table></td></tr>
		</table>>, URL="./EV3IRSensor.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// ev3dev.hardware.sensor.ev3.EV3IRSensor.DistanceMode
	c393 [label=<<table title="ev3dev.hardware.sensor.ev3.EV3IRSensor.DistanceMode" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./EV3IRSensor.DistanceMode.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> DistanceMode </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - toSI : float </td></tr>
<tr><td align="left" balign="left"> - pathDevice : File </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + DistanceMode(pathDevice : File) </td></tr>
<tr><td align="left" balign="left"> + sampleSize() : int </td></tr>
<tr><td align="left" balign="left"> + fetchSample(sample : float[], offset : int) </td></tr>
<tr><td align="left" balign="left"> + getName() : String </td></tr>
		</table></td></tr>
		</table>>, URL="./EV3IRSensor.DistanceMode.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// ev3dev.hardware.sensor.ev3.EV3TouchSensor
	c394 [label=<<table title="ev3dev.hardware.sensor.ev3.EV3TouchSensor" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./EV3TouchSensor.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> EV3TouchSensor </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + EV3TouchSensor(portName : String) </td></tr>
<tr><td align="left" balign="left"> # init() </td></tr>
<tr><td align="left" balign="left"> + getTouchMode() : SensorMode </td></tr>
		</table></td></tr>
		</table>>, URL="./EV3TouchSensor.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// ev3dev.hardware.sensor.ev3.EV3TouchSensor.TouchMode
	c395 [label=<<table title="ev3dev.hardware.sensor.ev3.EV3TouchSensor.TouchMode" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./EV3TouchSensor.TouchMode.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> TouchMode </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - pathDevice : File </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + TouchMode(pathDevice : File) </td></tr>
<tr><td align="left" balign="left"> + sampleSize() : int </td></tr>
<tr><td align="left" balign="left"> + fetchSample(sample : float[], offset : int) </td></tr>
<tr><td align="left" balign="left"> + getName() : String </td></tr>
		</table></td></tr>
		</table>>, URL="./EV3TouchSensor.TouchMode.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// ev3dev.hardware.sensor.ev3.EV3UltrasonicSensor
	c396 [label=<<table title="ev3dev.hardware.sensor.ev3.EV3UltrasonicSensor" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./EV3UltrasonicSensor.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> EV3UltrasonicSensor </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - DISABLED : int </td></tr>
<tr><td align="left" balign="left"> - SWITCHDELAY : int </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + EV3UltrasonicSensor(portName : String) </td></tr>
<tr><td align="left" balign="left"> # init() </td></tr>
<tr><td align="left" balign="left"> + getListenMode() : SampleProvider </td></tr>
<tr><td align="left" balign="left"> + getDistanceMode() : SampleProvider </td></tr>
<tr><td align="left" balign="left"> + enable() </td></tr>
<tr><td align="left" balign="left"> + disable() </td></tr>
<tr><td align="left" balign="left"> + isEnabled() : boolean </td></tr>
		</table></td></tr>
		</table>>, URL="./EV3UltrasonicSensor.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// ev3dev.hardware.sensor.ev3.EV3UltrasonicSensor.DistanceMode
	c397 [label=<<table title="ev3dev.hardware.sensor.ev3.EV3UltrasonicSensor.DistanceMode" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./EV3UltrasonicSensor.DistanceMode.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> DistanceMode </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - MODE : String </td></tr>
<tr><td align="left" balign="left"> - toSI : float </td></tr>
<tr><td align="left" balign="left"> - pathDevice : File </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + DistanceMode(pathDevice : File) </td></tr>
<tr><td align="left" balign="left"> + sampleSize() : int </td></tr>
<tr><td align="left" balign="left"> + fetchSample(sample : float[], offset : int) </td></tr>
<tr><td align="left" balign="left"> + getName() : String </td></tr>
		</table></td></tr>
		</table>>, URL="./EV3UltrasonicSensor.DistanceMode.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// ev3dev.hardware.sensor.ev3.EV3UltrasonicSensor.ListenMode
	c398 [label=<<table title="ev3dev.hardware.sensor.ev3.EV3UltrasonicSensor.ListenMode" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./EV3UltrasonicSensor.ListenMode.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> ListenMode </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - MODE : String </td></tr>
<tr><td align="left" balign="left"> - pathDevice : File </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + ListenMode(pathDevice : File) </td></tr>
<tr><td align="left" balign="left"> + sampleSize() : int </td></tr>
<tr><td align="left" balign="left"> + fetchSample(sample : float[], offset : int) </td></tr>
<tr><td align="left" balign="left"> + getName() : String </td></tr>
		</table></td></tr>
		</table>>, URL="./EV3UltrasonicSensor.ListenMode.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	//ev3dev.hardware.sensor.ev3.EV3ColorSensor.ColorIDMode extends ev3dev.hardware.sensor.ev3.EV3DevSensorMode
	c389:p -> c385:p [dir=back,arrowtail=empty];
	//ev3dev.hardware.sensor.ev3.EV3ColorSensor.RedMode extends ev3dev.hardware.sensor.ev3.EV3DevSensorMode
	c389:p -> c386:p [dir=back,arrowtail=empty];
	//ev3dev.hardware.sensor.ev3.EV3ColorSensor.AmbientMode extends ev3dev.hardware.sensor.ev3.EV3DevSensorMode
	c389:p -> c387:p [dir=back,arrowtail=empty];
	//ev3dev.hardware.sensor.ev3.EV3ColorSensor.RGBMode extends ev3dev.hardware.sensor.ev3.EV3DevSensorMode
	c389:p -> c388:p [dir=back,arrowtail=empty];
	//ev3dev.hardware.sensor.ev3.EV3GyroSensor.AngleMode extends ev3dev.hardware.sensor.ev3.EV3DevSensorMode
	c389:p -> c391:p [dir=back,arrowtail=empty];
	//ev3dev.hardware.sensor.ev3.EV3IRSensor.DistanceMode extends ev3dev.hardware.sensor.ev3.EV3DevSensorMode
	c389:p -> c393:p [dir=back,arrowtail=empty];
	//ev3dev.hardware.sensor.ev3.EV3TouchSensor.TouchMode extends ev3dev.hardware.sensor.ev3.EV3DevSensorMode
	c389:p -> c395:p [dir=back,arrowtail=empty];
	//ev3dev.hardware.sensor.ev3.EV3UltrasonicSensor.DistanceMode extends ev3dev.hardware.sensor.ev3.EV3DevSensorMode
	c389:p -> c397:p [dir=back,arrowtail=empty];
	//ev3dev.hardware.sensor.ev3.EV3UltrasonicSensor.ListenMode extends ev3dev.hardware.sensor.ev3.EV3DevSensorMode
	c389:p -> c398:p [dir=back,arrowtail=empty];
}

