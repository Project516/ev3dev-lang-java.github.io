#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version R5_6-24-gf6e263 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="Helvetica",fontsize=10,labelfontname="Helvetica",labelfontsize=10];
	node [fontname="Helvetica",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	// lejos.robotics.SampleProvider
	c1072 [label=<<table title="lejos.robotics.SampleProvider" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../SampleProvider.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> SampleProvider </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + sampleSize() : int </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + fetchSample(sample : float[], offset : int) </font></td></tr>
		</table></td></tr>
		</table>>, URL="../SampleProvider.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.robotics.filter.AbstractCalibrationFilter
	c1074 [label=<<table title="lejos.robotics.filter.AbstractCalibrationFilter" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AbstractCalibrationFilter.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Helvetica-Oblique"> AbstractCalibrationFilter </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> # lowPassFilter : LowPassFilter </td></tr>
<tr><td align="left" balign="left"> # min : float[] </td></tr>
<tr><td align="left" balign="left"> # max : float[] </td></tr>
<tr><td align="left" balign="left"> # sum : float[] </td></tr>
<tr><td align="left" balign="left"> # calibrating : boolean </td></tr>
<tr><td align="left" balign="left"> - DIRECTORY : String </td></tr>
<tr><td align="left" balign="left"> - EXT : String </td></tr>
<tr><td align="left" balign="left"> - props : Properties </td></tr>
<tr><td align="left" balign="left"> # numberOfSamplesInCalibration : int </td></tr>
<tr><td align="left" balign="left"> - timeConstant : float </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + AbstractCalibrationFilter(source : SampleProvider) </td></tr>
<tr><td align="left" balign="left"> + fetchSample(dst : float[], off : int) </td></tr>
<tr><td align="left" balign="left"> + setTimeConstant(timeConstant : float) </td></tr>
<tr><td align="left" balign="left"> + startCalibration() </td></tr>
<tr><td align="left" balign="left"> + stopCalibration() </td></tr>
<tr><td align="left" balign="left"> + suspendCalibration() </td></tr>
<tr><td align="left" balign="left"> + resumeCalibration() </td></tr>
<tr><td align="left" balign="left"> - getFile(filename : String) : File </td></tr>
<tr><td align="left" balign="left"> # load(filename : String) </td></tr>
<tr><td align="left" balign="left"> # store(filename : String) </td></tr>
<tr><td align="left" balign="left"> # getPropertyArray(key : String) : float[] </td></tr>
<tr><td align="left" balign="left"> # setPropertyArray(key : String, values : float[]) </td></tr>
<tr><td align="left" balign="left"> # setProperty(key : String, value : float) </td></tr>
<tr><td align="left" balign="left"> # getProperty(key : String) : float </td></tr>
		</table></td></tr>
		</table>>, URL="./AbstractCalibrationFilter.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.robotics.filter.AbstractFilter
	c1076 [label=<<table title="lejos.robotics.filter.AbstractFilter" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" bgcolor="lemonChiffon" href="./AbstractFilter.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Helvetica-Oblique"> AbstractFilter </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> # source : SampleProvider </td></tr>
<tr><td align="left" balign="left"> # sampleSize : int </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + AbstractFilter(source : SampleProvider) </td></tr>
<tr><td align="left" balign="left"> + sampleSize() : int </td></tr>
<tr><td align="left" balign="left"> + fetchSample(sample : float[], offset : int) </td></tr>
		</table></td></tr>
		</table>>, URL="./AbstractFilter.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.robotics.filter.IntegrationFilter
	c1079 [label=<<table title="lejos.robotics.filter.IntegrationFilter" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./IntegrationFilter.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> IntegrationFilter </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - lastTime : long </td></tr>
<tr><td align="left" balign="left"> - currentValue : float[] </td></tr>
<tr><td align="left" balign="left"> - NANO : float </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + IntegrationFilter(source : SampleProvider) </td></tr>
<tr><td align="left" balign="left"> + resetTo(value : float) </td></tr>
<tr><td align="left" balign="left"> + fetchSample(sample : float[], off : int) </td></tr>
		</table></td></tr>
		</table>>, URL="./IntegrationFilter.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.robotics.filter.LowPassFilter
	c1081 [label=<<table title="lejos.robotics.filter.LowPassFilter" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./LowPassFilter.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> LowPassFilter </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> ~ smoothed : float[] </td></tr>
<tr><td align="left" balign="left"> ~ lastTime : long </td></tr>
<tr><td align="left" balign="left"> ~ timeConstant : float </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + LowPassFilter(source : SampleProvider, timeConstant : float) </td></tr>
<tr><td align="left" balign="left"> + fetchSample(dst : float[], off : int) </td></tr>
<tr><td align="left" balign="left"> + setTimeConstant(timeConstant : float) </td></tr>
		</table></td></tr>
		</table>>, URL="./LowPassFilter.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.robotics.filter.ModulusFilter
	c1086 [label=<<table title="lejos.robotics.filter.ModulusFilter" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ModulusFilter.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> ModulusFilter </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - zeroValue : float[] </td></tr>
<tr><td align="left" balign="left"> ~ sample : float[] </td></tr>
<tr><td align="left" balign="left"> ~ modulus : float </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + ModulusFilter(source : SampleProvider, zeroValue : float[], modulus : float) </td></tr>
<tr><td align="left" balign="left"> + fetchSample(sample : float[], offset : int) </td></tr>
		</table></td></tr>
		</table>>, URL="./ModulusFilter.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.robotics.filter.OffsetCorrectionFilter
	c1087 [label=<<table title="lejos.robotics.filter.OffsetCorrectionFilter" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./OffsetCorrectionFilter.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> OffsetCorrectionFilter </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> ~ offset : float[] </td></tr>
<tr><td align="left" balign="left"> ~ reference : float[] </td></tr>
<tr><td align="left" balign="left"> - mean : float[] </td></tr>
<tr><td align="left" balign="left"> - m2 : float[] </td></tr>
<tr><td align="left" balign="left"> - actual : float[] </td></tr>
<tr><td align="left" balign="left"> - buffer : Queue&lt;Float&gt;[] </td></tr>
<tr><td align="left" balign="left"> - bufferSize : int </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + OffsetCorrectionFilter(source : SampleProvider) </td></tr>
<tr><td align="left" balign="left"> + OffsetCorrectionFilter(source : SampleProvider, reference : float[]) </td></tr>
<tr><td align="left" balign="left"> + OffsetCorrectionFilter(source : SampleProvider, reference : float[], bufferSize : int) </td></tr>
<tr><td align="left" balign="left"> + fetchSample(sample : float[], offset : int) </td></tr>
<tr><td align="left" balign="left"> - updateStatistics() </td></tr>
<tr><td align="left" balign="left"> - withinLimits(i : int) : boolean </td></tr>
<tr><td align="left" balign="left"> - addSample(i : int) </td></tr>
<tr><td align="left" balign="left"> - removeSample(i : int) </td></tr>
<tr><td align="left" balign="left"> + reset() </td></tr>
<tr><td align="left" balign="left"> - getVariance(i : int) : float </td></tr>
<tr><td align="left" balign="left"> - getStandardDeviation(i : int) : float </td></tr>
<tr><td align="left" balign="left"> + getMean() : float[] </td></tr>
<tr><td align="left" balign="left"> + getStandardDeviation() : float[] </td></tr>
		</table></td></tr>
		</table>>, URL="./OffsetCorrectionFilter.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.robotics.filter.SampleBuffer
	c1090 [label=<<table title="lejos.robotics.filter.SampleBuffer" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./SampleBuffer.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Helvetica-Oblique"> SampleBuffer </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> ~ bufferSize : int </td></tr>
<tr><td align="left" balign="left"> ~ actualSize : int </td></tr>
<tr><td align="left" balign="left"> ~ currentPos : int </td></tr>
<tr><td align="left" balign="left"> ~ sampleBuffer : float[] </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + SampleBuffer(source : SampleProvider, bufferSize : int) </td></tr>
<tr><td align="left" balign="left"> + getBufferSize() : int </td></tr>
<tr><td align="left" balign="left"> - reset() </td></tr>
<tr><td align="left" balign="left"> ~ toPos(i : int, index : int) : int </td></tr>
<tr><td align="left" balign="left"> + fetchSample(sample : float[], off : int) </td></tr>
<tr><td align="left" balign="left"> # getOldest(sample : float[], off : int) </td></tr>
<tr><td align="left" balign="left"> # getActualSize() : int </td></tr>
		</table></td></tr>
		</table>>, URL="./SampleBuffer.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.robotics.filter.SampleThread
	c1091 [label=<<table title="lejos.robotics.filter.SampleThread" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./SampleThread.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> SampleThread </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> ~ buffer : float[] </td></tr>
<tr><td align="left" balign="left"> ~ running : boolean </td></tr>
<tr><td align="left" balign="left"> - sampleRate : float </td></tr>
<tr><td align="left" balign="left"> ~ interval : int </td></tr>
<tr><td align="left" balign="left"> ~ newSampleAvailable : boolean </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + SampleThread(source : SampleProvider, sampleRate : float) </td></tr>
<tr><td align="left" balign="left"> + isNewSampleAvailable() : boolean </td></tr>
<tr><td align="left" balign="left"> + fetchSample(dst : float[], off : int) </td></tr>
<tr><td align="left" balign="left"> + getSampleRate() : float </td></tr>
<tr><td align="left" balign="left"> + setSampleRate(rate : float) </td></tr>
<tr><td align="left" balign="left"> + start() </td></tr>
<tr><td align="left" balign="left"> + stop() </td></tr>
		</table></td></tr>
		</table>>, URL="./SampleThread.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.robotics.filter.SliceFilter
	c1093 [label=<<table title="lejos.robotics.filter.SliceFilter" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./SliceFilter.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> SliceFilter </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - firstIndex : int </td></tr>
<tr><td align="left" balign="left"> - lastIndex : int </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + SliceFilter(source : SampleProvider, firstIndex : int, lastIndex : int) </td></tr>
<tr><td align="left" balign="left"> + sampleSize() : int </td></tr>
<tr><td align="left" balign="left"> + fetchSample(sample : float[], offset : int) </td></tr>
		</table></td></tr>
		</table>>, URL="./SliceFilter.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.robotics.filter.SumFilter
	c1095 [label=<<table title="lejos.robotics.filter.SumFilter" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./SumFilter.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> SumFilter </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - worker : SampleBuffer </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + SumFilter(source : SampleProvider, length : int) </td></tr>
<tr><td align="left" balign="left"> + fetchSample(sample : float[], offset : int) </td></tr>
<tr><td align="left" balign="left"> # getActualSize() : int </td></tr>
		</table></td></tr>
		</table>>, URL="./SumFilter.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.robotics.filter.ZeroFilter
	c1098 [label=<<table title="lejos.robotics.filter.ZeroFilter" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ZeroFilter.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> ZeroFilter </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - zeroValue : float[] </td></tr>
<tr><td align="left" balign="left"> ~ sample : float[] </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + ZeroFilter(source : SampleProvider, zeroValue : float[]) </td></tr>
<tr><td align="left" balign="left"> + fetchSample(sample : float[], offset : int) </td></tr>
		</table></td></tr>
		</table>>, URL="./ZeroFilter.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	//lejos.robotics.filter.AbstractCalibrationFilter extends lejos.robotics.filter.AbstractFilter
	c1076:p -> c1074:p [dir=back,arrowtail=empty];
	//lejos.robotics.filter.AbstractFilter implements lejos.robotics.SampleProvider
	c1072:p -> c1076:p [dir=back,arrowtail=empty,style=dashed];
	//lejos.robotics.filter.IntegrationFilter extends lejos.robotics.filter.AbstractFilter
	c1076:p -> c1079:p [dir=back,arrowtail=empty];
	//lejos.robotics.filter.LowPassFilter extends lejos.robotics.filter.AbstractFilter
	c1076:p -> c1081:p [dir=back,arrowtail=empty];
	//lejos.robotics.filter.ModulusFilter extends lejos.robotics.filter.AbstractFilter
	c1076:p -> c1086:p [dir=back,arrowtail=empty];
	//lejos.robotics.filter.OffsetCorrectionFilter extends lejos.robotics.filter.AbstractFilter
	c1076:p -> c1087:p [dir=back,arrowtail=empty];
	//lejos.robotics.filter.SampleBuffer extends lejos.robotics.filter.AbstractFilter
	c1076:p -> c1090:p [dir=back,arrowtail=empty];
	//lejos.robotics.filter.SampleThread extends lejos.robotics.filter.AbstractFilter
	c1076:p -> c1091:p [dir=back,arrowtail=empty];
	//lejos.robotics.filter.SliceFilter extends lejos.robotics.filter.AbstractFilter
	c1076:p -> c1093:p [dir=back,arrowtail=empty];
	//lejos.robotics.filter.SumFilter extends lejos.robotics.filter.AbstractFilter
	c1076:p -> c1095:p [dir=back,arrowtail=empty];
	//lejos.robotics.filter.ZeroFilter extends lejos.robotics.filter.AbstractFilter
	c1076:p -> c1098:p [dir=back,arrowtail=empty];
}

