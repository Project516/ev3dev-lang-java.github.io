#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version R5_6-24-gf6e263 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="Helvetica",fontsize=10,labelfontname="Helvetica",labelfontsize=10];
	node [fontname="Helvetica",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	// ev3dev.hardware.EV3DevDevice
	c1251 [label=<<table title="ev3dev.hardware.EV3DevDevice" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../EV3DevDevice.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> EV3DevDevice </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - DEVICE_ROOT_PATH : String </td></tr>
<tr><td align="left" balign="left"> - ADDRESS : String </td></tr>
<tr><td align="left" balign="left"> # PATH_DEVICE : File </td></tr>
<tr><td align="left" balign="left"> - connected : boolean </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + EV3DevDevice(type : String, portName : String) </td></tr>
<tr><td align="left" balign="left"> + connect(type : String, portName : String) </td></tr>
<tr><td align="left" balign="left"> + getStringAttribute(attribute : String) : String </td></tr>
<tr><td align="left" balign="left"> + getIntegerAttribute(attribute : String) : int </td></tr>
<tr><td align="left" balign="left"> + setStringAttribute(attribute : String, value : String) </td></tr>
<tr><td align="left" balign="left"> + setIntegerAttribute(attribute : String, value : int) </td></tr>
		</table></td></tr>
		</table>>, URL="../EV3DevDevice.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// ev3dev.hardware.sensor.BaseSensor
	c1263 [label=<<table title="ev3dev.hardware.sensor.BaseSensor" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" bgcolor="lemonChiffon" href="./BaseSensor.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> BaseSensor </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - SYSTEM_CLASS_NAME : String </td></tr>
<tr><td align="left" balign="left"> - SENSOR_MODES : String </td></tr>
<tr><td align="left" balign="left"> - SENSOR_MODE : String </td></tr>
<tr><td align="left" balign="left"> # currentMode : int </td></tr>
<tr><td align="left" balign="left"> # currentModeS : String </td></tr>
<tr><td align="left" balign="left"> # modes : SensorMode[] </td></tr>
<tr><td align="left" balign="left"> ~ modeList : ArrayList&lt;String&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + BaseSensor(sensorPort : String) </td></tr>
<tr><td align="left" balign="left"> # setModes(m : SensorMode[]) </td></tr>
<tr><td align="left" balign="left"> + getAvailableModes() : ArrayList&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> + getMode(mode : int) : SensorMode </td></tr>
<tr><td align="left" balign="left"> + getMode(modeName : String) : SensorMode </td></tr>
<tr><td align="left" balign="left"> - isValid(mode : int) : boolean </td></tr>
<tr><td align="left" balign="left"> - getIndex(modeName : String) : int </td></tr>
<tr><td align="left" balign="left"> + getName() : String </td></tr>
<tr><td align="left" balign="left"> + sampleSize() : int </td></tr>
<tr><td align="left" balign="left"> + fetchSample(sample : float[], offset : int) </td></tr>
<tr><td align="left" balign="left"> + setCurrentMode(mode : int) </td></tr>
<tr><td align="left" balign="left"> + setCurrentMode(modeName : String) </td></tr>
<tr><td align="left" balign="left"> + getCurrentMode() : int </td></tr>
<tr><td align="left" balign="left"> + getModeCount() : int </td></tr>
<tr><td align="left" balign="left"> # switchMode(newMode : int, switchDelay : long) </td></tr>
<tr><td align="left" balign="left"> # switchMode(newMode : String, switchDelay : long) </td></tr>
		</table></td></tr>
		</table>>, URL="./BaseSensor.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// ev3dev.hardware.sensor.SensorModes
	c1265 [label=<<table title="ev3dev.hardware.sensor.SensorModes" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./SensorModes.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> SensorModes </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + getAvailableModes() : ArrayList&lt;String&gt; </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + getMode(mode : int) : SensorMode </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + getMode(modeName : String) : SensorMode </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + setCurrentMode(mode : int) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + setCurrentMode(modeName : String) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + getCurrentMode() : int </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + getModeCount() : int </font></td></tr>
		</table></td></tr>
		</table>>, URL="./SensorModes.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// ev3dev.hardware.sensor.ev3.EV3ColorSensor
	c1266 [label=<<table title="ev3dev.hardware.sensor.ev3.EV3ColorSensor" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ev3/EV3ColorSensor.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> EV3ColorSensor </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> # colorMap : int[] </td></tr>
<tr><td align="left" balign="left"> # SWITCH_DELAY : int </td></tr>
<tr><td align="left" balign="left"> # COL_RESET : String </td></tr>
<tr><td align="left" balign="left"> # COL_REFLECT : String </td></tr>
<tr><td align="left" balign="left"> # COL_AMBIENT : String </td></tr>
<tr><td align="left" balign="left"> # COL_COLOR : String </td></tr>
<tr><td align="left" balign="left"> # COL_REFRAW : String </td></tr>
<tr><td align="left" balign="left"> # COL_RGBRAW : String </td></tr>
<tr><td align="left" balign="left"> # COL_CAL : String </td></tr>
<tr><td align="left" balign="left"> # lightColor : int[] </td></tr>
<tr><td align="left" balign="left"> # raw : short[] </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + EV3ColorSensor(sensorPort : String) </td></tr>
<tr><td align="left" balign="left"> - initModes() </td></tr>
<tr><td align="left" balign="left"> + getColorID() : int </td></tr>
<tr><td align="left" balign="left"> + setFloodlight(floodlight : boolean) </td></tr>
<tr><td align="left" balign="left"> + isFloodlightOn() : boolean </td></tr>
<tr><td align="left" balign="left"> + getFloodlight() : int </td></tr>
<tr><td align="left" balign="left"> + setFloodlight(color : int) : boolean </td></tr>
<tr><td align="left" balign="left"> + getColorIDMode() : SensorMode </td></tr>
<tr><td align="left" balign="left"> + getRedMode() : SensorMode </td></tr>
<tr><td align="left" balign="left"> + getAmbientMode() : SensorMode </td></tr>
<tr><td align="left" balign="left"> + getRGBMode() : SensorMode </td></tr>
		</table></td></tr>
		</table>>, URL="./ev3/EV3ColorSensor.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// ev3dev.hardware.sensor.ev3.EV3GyroSensor
	c1272 [label=<<table title="ev3dev.hardware.sensor.ev3.EV3GyroSensor" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ev3/EV3GyroSensor.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> EV3GyroSensor </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - SWITCHDELAY : long </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + EV3GyroSensor(sensorPort : String) </td></tr>
<tr><td align="left" balign="left"> + getAngleMode() : SampleProvider </td></tr>
<tr><td align="left" balign="left"> + reset() </td></tr>
<tr><td align="left" balign="left"> + getAngle() : int </td></tr>
		</table></td></tr>
		</table>>, URL="./ev3/EV3GyroSensor.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// ev3dev.hardware.sensor.ev3.EV3IRSensor
	c1274 [label=<<table title="ev3dev.hardware.sensor.ev3.EV3IRSensor" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ev3/EV3IRSensor.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> EV3IRSensor </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> # SWITCH_DELAY : int </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + EV3IRSensor(sensorPort : String) </td></tr>
<tr><td align="left" balign="left"> # init() </td></tr>
<tr><td align="left" balign="left"> + getDistanceMode() : SensorMode </td></tr>
		</table></td></tr>
		</table>>, URL="./ev3/EV3IRSensor.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// ev3dev.hardware.sensor.ev3.EV3TouchSensor
	c1276 [label=<<table title="ev3dev.hardware.sensor.ev3.EV3TouchSensor" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ev3/EV3TouchSensor.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> EV3TouchSensor </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + EV3TouchSensor(portName : String) </td></tr>
<tr><td align="left" balign="left"> # init() </td></tr>
<tr><td align="left" balign="left"> + getTouchMode() : SensorMode </td></tr>
		</table></td></tr>
		</table>>, URL="./ev3/EV3TouchSensor.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// ev3dev.hardware.sensor.ev3.EV3UltrasonicSensor
	c1278 [label=<<table title="ev3dev.hardware.sensor.ev3.EV3UltrasonicSensor" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ev3/EV3UltrasonicSensor.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> EV3UltrasonicSensor </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - DISABLED : int </td></tr>
<tr><td align="left" balign="left"> - SWITCHDELAY : int </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + EV3UltrasonicSensor(portName : String) </td></tr>
<tr><td align="left" balign="left"> # init() </td></tr>
<tr><td align="left" balign="left"> + getListenMode() : SampleProvider </td></tr>
<tr><td align="left" balign="left"> + getDistanceMode() : SampleProvider </td></tr>
<tr><td align="left" balign="left"> + enable() </td></tr>
<tr><td align="left" balign="left"> + disable() </td></tr>
<tr><td align="left" balign="left"> + isEnabled() : boolean </td></tr>
		</table></td></tr>
		</table>>, URL="./ev3/EV3UltrasonicSensor.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	//ev3dev.hardware.sensor.BaseSensor extends ev3dev.hardware.EV3DevDevice
	c1251:p -> c1263:p [dir=back,arrowtail=empty];
	//ev3dev.hardware.sensor.BaseSensor implements ev3dev.hardware.sensor.SensorModes
	c1265:p -> c1263:p [dir=back,arrowtail=empty,style=dashed];
	//ev3dev.hardware.sensor.ev3.EV3ColorSensor extends ev3dev.hardware.sensor.BaseSensor
	c1263:p -> c1266:p [dir=back,arrowtail=empty];
	//ev3dev.hardware.sensor.ev3.EV3GyroSensor extends ev3dev.hardware.sensor.BaseSensor
	c1263:p -> c1272:p [dir=back,arrowtail=empty];
	//ev3dev.hardware.sensor.ev3.EV3IRSensor extends ev3dev.hardware.sensor.BaseSensor
	c1263:p -> c1274:p [dir=back,arrowtail=empty];
	//ev3dev.hardware.sensor.ev3.EV3TouchSensor extends ev3dev.hardware.sensor.BaseSensor
	c1263:p -> c1276:p [dir=back,arrowtail=empty];
	//ev3dev.hardware.sensor.ev3.EV3UltrasonicSensor extends ev3dev.hardware.sensor.BaseSensor
	c1263:p -> c1278:p [dir=back,arrowtail=empty];
}

