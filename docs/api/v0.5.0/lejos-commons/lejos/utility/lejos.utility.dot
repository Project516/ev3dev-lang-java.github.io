#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version R5_6-24-gf6e263 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="Helvetica",fontsize=10,labelfontname="Helvetica",labelfontsize=10];
	node [fontname="Helvetica",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	// lejos.utility.Delay
	c463 [label=<<table title="lejos.utility.Delay" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./Delay.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Delay </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Delay() </td></tr>
<tr><td align="left" balign="left"> + msDelay(period : long) </td></tr>
<tr><td align="left" balign="left"> + usDelay(period : long) </td></tr>
<tr><td align="left" balign="left"> + nsDelay(period : long) </td></tr>
		</table></td></tr>
		</table>>, URL="./Delay.html", fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// lejos.utility.EndianTools
	c464 [label=<<table title="lejos.utility.EndianTools" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./EndianTools.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> EndianTools </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + EndianTools() </td></tr>
<tr><td align="left" balign="left"> + decodeLongBE(b : byte[], off : int) : long </td></tr>
<tr><td align="left" balign="left"> + decodeUIntBE(b : byte[], off : int) : long </td></tr>
<tr><td align="left" balign="left"> + decodeUShortBE(b : byte[], off : int) : int </td></tr>
<tr><td align="left" balign="left"> + decodeIntBE(b : byte[], off : int) : int </td></tr>
<tr><td align="left" balign="left"> + decodeShortBE(b : byte[], off : int) : short </td></tr>
<tr><td align="left" balign="left"> + decodeLongLE(b : byte[], off : int) : long </td></tr>
<tr><td align="left" balign="left"> + decodeUIntLE(b : byte[], off : int) : long </td></tr>
<tr><td align="left" balign="left"> + decodeUShortLE(b : byte[], off : int) : int </td></tr>
<tr><td align="left" balign="left"> + decodeIntLE(b : byte[], off : int) : int </td></tr>
<tr><td align="left" balign="left"> + decodeShortLE(b : byte[], off : int) : short </td></tr>
<tr><td align="left" balign="left"> + encodeLongBE(v : long, b : byte[], off : int) </td></tr>
<tr><td align="left" balign="left"> + encodeIntBE(v : int, b : byte[], off : int) </td></tr>
<tr><td align="left" balign="left"> + encodeShortBE(v : int, b : byte[], off : int) </td></tr>
<tr><td align="left" balign="left"> + encodeLongLE(v : long, b : byte[], off : int) </td></tr>
<tr><td align="left" balign="left"> + encodeIntLE(v : int, b : byte[], off : int) </td></tr>
<tr><td align="left" balign="left"> + encodeShortLE(v : int, b : byte[], off : int) </td></tr>
		</table></td></tr>
		</table>>, URL="./EndianTools.html", fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// lejos.utility.GyroDirectionFinder
	c465 [label=<<table title="lejos.utility.GyroDirectionFinder" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./GyroDirectionFinder.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> GyroDirectionFinder </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - cartesianCalibrate : float </td></tr>
<tr><td align="left" balign="left"> - heading : float </td></tr>
<tr><td align="left" balign="left"> - acceleration : float </td></tr>
<tr><td align="left" balign="left"> - calibrating : boolean </td></tr>
<tr><td align="left" balign="left"> - reg : GyroDirectionFinder.Regulator </td></tr>
<tr><td align="left" balign="left"> - gyro : Gyroscope </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + GyroDirectionFinder(gyro : Gyroscope) </td></tr>
<tr><td align="left" balign="left"> + GyroDirectionFinder(gyro : Gyroscope, calibrate : boolean) </td></tr>
<tr><td align="left" balign="left"> + setDegrees(heading : float) </td></tr>
<tr><td align="left" balign="left"> + getDegrees() : float </td></tr>
<tr><td align="left" balign="left"> + getAngularVelocity() : float </td></tr>
<tr><td align="left" balign="left"> + getAngularAcceleration() : float </td></tr>
<tr><td align="left" balign="left"> + getDegreesCartesian() : float </td></tr>
<tr><td align="left" balign="left"> + setDegreesCartesian(heading : float) </td></tr>
<tr><td align="left" balign="left"> + resetCartesianZero() </td></tr>
<tr><td align="left" balign="left"> + startCalibration() </td></tr>
<tr><td align="left" balign="left"> + stopCalibration() </td></tr>
		</table></td></tr>
		</table>>, URL="./GyroDirectionFinder.html", fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// lejos.utility.GyroDirectionFinder.Regulator
	c466 [label=<<table title="lejos.utility.GyroDirectionFinder.Regulator" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./GyroDirectionFinder.Regulator.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Regulator </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> # Regulator() </td></tr>
<tr><td align="left" balign="left"> + run() </td></tr>
		</table></td></tr>
		</table>>, URL="./GyroDirectionFinder.Regulator.html", fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// lejos.utility.Integration
	c467 [label=<<table title="lejos.utility.Integration" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./Integration.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Integration </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - lastReadingMillis : long </td></tr>
<tr><td align="left" balign="left"> - lastReading : double </td></tr>
<tr><td align="left" balign="left"> - integral : double </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Integration(initialValue : double, reading : double) </td></tr>
<tr><td align="left" balign="left"> + addReading(reading : double) : double </td></tr>
		</table></td></tr>
		</table>>, URL="./Integration.html", fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// lejos.utility.KalmanFilter
	c468 [label=<<table title="lejos.utility.KalmanFilter" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./KalmanFilter.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> KalmanFilter </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - a : Matrix </td></tr>
<tr><td align="left" balign="left"> - b : Matrix </td></tr>
<tr><td align="left" balign="left"> - c : Matrix </td></tr>
<tr><td align="left" balign="left"> - i : Matrix </td></tr>
<tr><td align="left" balign="left"> - q : Matrix </td></tr>
<tr><td align="left" balign="left"> - r : Matrix </td></tr>
<tr><td align="left" balign="left"> - at : Matrix </td></tr>
<tr><td align="left" balign="left"> - ct : Matrix </td></tr>
<tr><td align="left" balign="left"> - mu : Matrix </td></tr>
<tr><td align="left" balign="left"> - sigma : Matrix </td></tr>
<tr><td align="left" balign="left"> - muBar : Matrix </td></tr>
<tr><td align="left" balign="left"> - sigmaBar : Matrix </td></tr>
<tr><td align="left" balign="left"> - gain : Matrix </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + KalmanFilter(a : Matrix, b : Matrix, c : Matrix, q : Matrix, r : Matrix) </td></tr>
<tr><td align="left" balign="left"> + setState(mean : Matrix, covariance : Matrix) </td></tr>
<tr><td align="left" balign="left"> + update(control : Matrix, measurement : Matrix) </td></tr>
<tr><td align="left" balign="left"> + getMean() : Matrix </td></tr>
<tr><td align="left" balign="left"> + getCovariance() : Matrix </td></tr>
<tr><td align="left" balign="left"> + getPredictedMean() : Matrix </td></tr>
<tr><td align="left" balign="left"> + getPredictedCovariance() : Matrix </td></tr>
<tr><td align="left" balign="left"> + getGain() : Matrix </td></tr>
		</table></td></tr>
		</table>>, URL="./KalmanFilter.html", fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// lejos.utility.LUDecomposition
	c469 [label=<<table title="lejos.utility.LUDecomposition" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./LUDecomposition.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> LUDecomposition </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - serialVersionUID : long </td></tr>
<tr><td align="left" balign="left"> - LU : double[][] </td></tr>
<tr><td align="left" balign="left"> - m : int </td></tr>
<tr><td align="left" balign="left"> - n : int </td></tr>
<tr><td align="left" balign="left"> - pivsign : int </td></tr>
<tr><td align="left" balign="left"> - piv : int[] </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + LUDecomposition(A : Matrix) </td></tr>
<tr><td align="left" balign="left"> + isNonsingular() : boolean </td></tr>
<tr><td align="left" balign="left"> + getL() : Matrix </td></tr>
<tr><td align="left" balign="left"> + getU() : Matrix </td></tr>
<tr><td align="left" balign="left"> + getPivot() : int[] </td></tr>
<tr><td align="left" balign="left"> + getDoublePivot() : double[] </td></tr>
<tr><td align="left" balign="left"> + det() : double </td></tr>
<tr><td align="left" balign="left"> + solve(B : Matrix) : Matrix </td></tr>
		</table></td></tr>
		</table>>, URL="./LUDecomposition.html", fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// lejos.utility.Matrix
	c470 [label=<<table title="lejos.utility.Matrix" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./Matrix.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Matrix </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - serialVersionUID : long </td></tr>
<tr><td align="left" balign="left"> - A : double[][] </td></tr>
<tr><td align="left" balign="left"> - m : int </td></tr>
<tr><td align="left" balign="left"> - n : int </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Matrix(m : int, n : int) </td></tr>
<tr><td align="left" balign="left"> + Matrix(m : int, n : int, s : double) </td></tr>
<tr><td align="left" balign="left"> + Matrix(A : double[][]) </td></tr>
<tr><td align="left" balign="left"> + Matrix(A : double[][], m : int, n : int) </td></tr>
<tr><td align="left" balign="left"> + Matrix(vals : double[], m : int) </td></tr>
<tr><td align="left" balign="left"> + constructWithCopy(A : double[][]) : Matrix </td></tr>
<tr><td align="left" balign="left"> + copy() : Matrix </td></tr>
<tr><td align="left" balign="left"> + clone() : Object </td></tr>
<tr><td align="left" balign="left"> + getArray() : double[][] </td></tr>
<tr><td align="left" balign="left"> + getArrayCopy() : double[][] </td></tr>
<tr><td align="left" balign="left"> + getColumnPackedCopy() : double[] </td></tr>
<tr><td align="left" balign="left"> + getRowPackedCopy() : double[] </td></tr>
<tr><td align="left" balign="left"> + getRowDimension() : int </td></tr>
<tr><td align="left" balign="left"> + getColumnDimension() : int </td></tr>
<tr><td align="left" balign="left"> + get(i : int, j : int) : double </td></tr>
<tr><td align="left" balign="left"> + getMatrix(i0 : int, i1 : int, j0 : int, j1 : int) : Matrix </td></tr>
<tr><td align="left" balign="left"> + getMatrix(r : int[], c : int[]) : Matrix </td></tr>
<tr><td align="left" balign="left"> + getMatrix(i0 : int, i1 : int, c : int[]) : Matrix </td></tr>
<tr><td align="left" balign="left"> + getMatrix(r : int[], j0 : int, j1 : int) : Matrix </td></tr>
<tr><td align="left" balign="left"> + set(i : int, j : int, s : double) </td></tr>
<tr><td align="left" balign="left"> + setMatrix(i0 : int, i1 : int, j0 : int, j1 : int, X : Matrix) </td></tr>
<tr><td align="left" balign="left"> + setMatrix(r : int[], c : int[], X : Matrix) </td></tr>
<tr><td align="left" balign="left"> + setMatrix(r : int[], j0 : int, j1 : int, X : Matrix) </td></tr>
<tr><td align="left" balign="left"> + setMatrix(i0 : int, i1 : int, c : int[], X : Matrix) </td></tr>
<tr><td align="left" balign="left"> + transpose() : Matrix </td></tr>
<tr><td align="left" balign="left"> + norm1() : double </td></tr>
<tr><td align="left" balign="left"> + normInf() : double </td></tr>
<tr><td align="left" balign="left"> + normF() : double </td></tr>
<tr><td align="left" balign="left"> + uminus() : Matrix </td></tr>
<tr><td align="left" balign="left"> + plus(B : Matrix) : Matrix </td></tr>
<tr><td align="left" balign="left"> + plusEquals(B : Matrix) : Matrix </td></tr>
<tr><td align="left" balign="left"> + minus(B : Matrix) : Matrix </td></tr>
<tr><td align="left" balign="left"> + minusEquals(B : Matrix) : Matrix </td></tr>
<tr><td align="left" balign="left"> + arrayTimes(B : Matrix) : Matrix </td></tr>
<tr><td align="left" balign="left"> + arrayTimesEquals(B : Matrix) : Matrix </td></tr>
<tr><td align="left" balign="left"> + arrayRightDivide(B : Matrix) : Matrix </td></tr>
<tr><td align="left" balign="left"> + arrayRightDivideEquals(B : Matrix) : Matrix </td></tr>
<tr><td align="left" balign="left"> + arrayLeftDivide(B : Matrix) : Matrix </td></tr>
<tr><td align="left" balign="left"> + arrayLeftDivideEquals(B : Matrix) : Matrix </td></tr>
<tr><td align="left" balign="left"> + times(s : double) : Matrix </td></tr>
<tr><td align="left" balign="left"> + timesEquals(s : double) : Matrix </td></tr>
<tr><td align="left" balign="left"> + times(B : Matrix) : Matrix </td></tr>
<tr><td align="left" balign="left"> + trace() : double </td></tr>
<tr><td align="left" balign="left"> + random(m : int, n : int) : Matrix </td></tr>
<tr><td align="left" balign="left"> + identity(m : int, n : int) : Matrix </td></tr>
<tr><td align="left" balign="left"> + inverse() : Matrix </td></tr>
<tr><td align="left" balign="left"> + solve(B : Matrix) : Matrix </td></tr>
<tr><td align="left" balign="left"> + print(out : PrintStream) </td></tr>
<tr><td align="left" balign="left"> - checkMatrixDimensions(B : Matrix) </td></tr>
<tr><td align="left" balign="left"> - hypot(a : double, b : double) : double </td></tr>
		</table></td></tr>
		</table>>, URL="./Matrix.html", fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// lejos.utility.Stopwatch
	c471 [label=<<table title="lejos.utility.Stopwatch" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./Stopwatch.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Stopwatch </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - t0 : int </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Stopwatch() </td></tr>
<tr><td align="left" balign="left"> + reset() </td></tr>
<tr><td align="left" balign="left"> + elapsed() : int </td></tr>
		</table></td></tr>
		</table>>, URL="./Stopwatch.html", fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// lejos.utility.Timer
	c472 [label=<<table title="lejos.utility.Timer" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./Timer.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Timer </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - myListener : TimerListener </td></tr>
<tr><td align="left" balign="left"> - myThread : Thread </td></tr>
<tr><td align="left" balign="left"> - delay : int </td></tr>
<tr><td align="left" balign="left"> - running : boolean </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Timer(theDelay : int, el : TimerListener) </td></tr>
<tr><td align="left" balign="left"> + getDelay() : int </td></tr>
<tr><td align="left" balign="left"> + setDelay(newDelay : int) </td></tr>
<tr><td align="left" balign="left"> + stop() </td></tr>
<tr><td align="left" balign="left"> + start() </td></tr>
		</table></td></tr>
		</table>>, URL="./Timer.html", fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// lejos.utility.TimerListener
	c473 [label=<<table title="lejos.utility.TimerListener" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./TimerListener.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> TimerListener </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="9.0"> + timedOut() </font></td></tr>
		</table></td></tr>
		</table>>, URL="./TimerListener.html", fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// lejos.utility.GyroDirectionFinder NAVASSOC lejos.utility.GyroDirectionFinder.Regulator
	c465:p -> c466:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// lejos.utility.KalmanFilter NAVASSOC lejos.utility.Matrix
	c468:p -> c470:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// lejos.utility.KalmanFilter NAVASSOC lejos.utility.Matrix
	c468:p -> c470:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// lejos.utility.KalmanFilter NAVASSOC lejos.utility.Matrix
	c468:p -> c470:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// lejos.utility.KalmanFilter NAVASSOC lejos.utility.Matrix
	c468:p -> c470:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// lejos.utility.KalmanFilter NAVASSOC lejos.utility.Matrix
	c468:p -> c470:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// lejos.utility.KalmanFilter NAVASSOC lejos.utility.Matrix
	c468:p -> c470:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// lejos.utility.KalmanFilter NAVASSOC lejos.utility.Matrix
	c468:p -> c470:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// lejos.utility.KalmanFilter NAVASSOC lejos.utility.Matrix
	c468:p -> c470:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// lejos.utility.KalmanFilter NAVASSOC lejos.utility.Matrix
	c468:p -> c470:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// lejos.utility.KalmanFilter NAVASSOC lejos.utility.Matrix
	c468:p -> c470:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// lejos.utility.KalmanFilter NAVASSOC lejos.utility.Matrix
	c468:p -> c470:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// lejos.utility.KalmanFilter NAVASSOC lejos.utility.Matrix
	c468:p -> c470:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// lejos.utility.KalmanFilter NAVASSOC lejos.utility.Matrix
	c468:p -> c470:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// lejos.utility.Timer NAVASSOC lejos.utility.TimerListener
	c472:p -> c473:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
}

