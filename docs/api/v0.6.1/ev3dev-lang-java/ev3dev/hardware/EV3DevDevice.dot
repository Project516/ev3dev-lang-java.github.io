#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version R5_6-24-gf6e263 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="Helvetica",fontsize=10,labelfontname="Helvetica",labelfontsize=10];
	node [fontname="Helvetica",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	// ev3dev.actuators.LCD
	c888 [label=<<table title="ev3dev.actuators.LCD" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../actuators/LCD.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> LCD </td></tr>
<tr><td align="center" balign="center"><font point-size="7.0"> ev3dev.actuators </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - log : Logger </td></tr>
<tr><td align="left" balign="left"> + FB_PATH : java.lang.String </td></tr>
<tr><td align="left" balign="left"> - SCREEN_WIDTH : int </td></tr>
<tr><td align="left" balign="left"> - SCREEN_HEIGHT : int </td></tr>
<tr><td align="left" balign="left"> - LINE_LEN : int </td></tr>
<tr><td align="left" balign="left"> - BUFFER_SIZE : int </td></tr>
<tr><td align="left" balign="left"> + EV3_SCREEN_WIDTH : int </td></tr>
<tr><td align="left" balign="left"> + EV3_SCREEN_HEIGHT : int </td></tr>
<tr><td align="left" balign="left"> + EV3_LINE_LEN : int </td></tr>
<tr><td align="left" balign="left"> + EV3_ROWS : int </td></tr>
<tr><td align="left" balign="left"> + EV3_BUFFER_SIZE : int </td></tr>
<tr><td align="left" balign="left"> - image : java.awt.image.BufferedImage </td></tr>
<tr><td align="left" balign="left"> - g2d : java.awt.Graphics2D </td></tr>
<tr><td align="left" balign="left"> - Instance : GraphicsLCD </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - LCD() </td></tr>
<tr><td align="left" balign="left"> + getInstance() : GraphicsLCD </td></tr>
<tr><td align="left" balign="left"> - init(width : int, height : int, lineLength : int, bufferSize : int) </td></tr>
<tr><td align="left" balign="left"> + getImage() : java.awt.image.BufferedImage </td></tr>
<tr><td align="left" balign="left"> + flush() </td></tr>
<tr><td align="left" balign="left"> + translate(x : int, y : int) </td></tr>
<tr><td align="left" balign="left"> + getFont() : java.awt.Font </td></tr>
<tr><td align="left" balign="left"> + setFont(font : java.awt.Font) </td></tr>
<tr><td align="left" balign="left"> + getTranslateX() : int </td></tr>
<tr><td align="left" balign="left"> + getTranslateY() : int </td></tr>
<tr><td align="left" balign="left"> + setColor(color : int) </td></tr>
<tr><td align="left" balign="left"> + setColor(i : int, i1 : int, i2 : int) </td></tr>
<tr><td align="left" balign="left"> + setPixel(i : int, i1 : int, i2 : int) </td></tr>
<tr><td align="left" balign="left"> + getPixel(i : int, i1 : int) : int </td></tr>
<tr><td align="left" balign="left"> + drawString(s : java.lang.String, i : int, i1 : int, i2 : int, b : boolean) </td></tr>
<tr><td align="left" balign="left"> + drawString(s : java.lang.String, i : int, i1 : int, i2 : int) </td></tr>
<tr><td align="left" balign="left"> + drawSubstring(s : java.lang.String, i : int, i1 : int, i2 : int, i3 : int, i4 : int) </td></tr>
<tr><td align="left" balign="left"> + drawChar(c : char, i : int, i1 : int, i2 : int) </td></tr>
<tr><td align="left" balign="left"> + drawChars(chars : char[], i : int, i1 : int, i2 : int, i3 : int, i4 : int) </td></tr>
<tr><td align="left" balign="left"> + getStrokeStyle() : int </td></tr>
<tr><td align="left" balign="left"> + setStrokeStyle(i : int) </td></tr>
<tr><td align="left" balign="left"> + drawRegionRop(image : java.awt.Image, i : int, i1 : int, i2 : int, i3 : int, i4 : int, i5 : int, i6 : int, i7 : int) </td></tr>
<tr><td align="left" balign="left"> + drawRegionRop(image : java.awt.Image, i : int, i1 : int, i2 : int, i3 : int, i4 : int, i5 : int, i6 : int, i7 : int, i8 : int) </td></tr>
<tr><td align="left" balign="left"> + drawRegion(image : java.awt.Image, i : int, i1 : int, i2 : int, i3 : int, i4 : int, i5 : int, i6 : int, i7 : int) </td></tr>
<tr><td align="left" balign="left"> + drawImage(image : java.awt.Image, i : int, i1 : int, i2 : int) </td></tr>
<tr><td align="left" balign="left"> + drawLine(x1 : int, y1 : int, x2 : int, y2 : int) </td></tr>
<tr><td align="left" balign="left"> + fillRect(x : int, y : int, width : int, height : int) </td></tr>
<tr><td align="left" balign="left"> + copyArea(i : int, i1 : int, i2 : int, i3 : int, i4 : int, i5 : int, i6 : int) </td></tr>
<tr><td align="left" balign="left"> + drawRoundRect(x : int, y : int, width : int, height : int, arcWidth : int, arcHeight : int) </td></tr>
<tr><td align="left" balign="left"> + drawRect(x : int, y : int, width : int, height : int) </td></tr>
<tr><td align="left" balign="left"> + drawArc(x : int, y : int, width : int, height : int, startAngle : int, arcAngle : int) </td></tr>
<tr><td align="left" balign="left"> + fillArc(x : int, y : int, width : int, height : int, startAngle : int, arcAngle : int) </td></tr>
<tr><td align="left" balign="left"> + refresh() </td></tr>
<tr><td align="left" balign="left"> + clear() </td></tr>
<tr><td align="left" balign="left"> + getWidth() : int </td></tr>
<tr><td align="left" balign="left"> + getHeight() : int </td></tr>
<tr><td align="left" balign="left"> + getDisplay() : byte[] </td></tr>
<tr><td align="left" balign="left"> + getHWDisplay() : byte[] </td></tr>
<tr><td align="left" balign="left"> + setContrast(i : int) </td></tr>
<tr><td align="left" balign="left"> + bitBlt(bytes : byte[], i : int, i1 : int, i2 : int, i3 : int, i4 : int, i5 : int, i6 : int, i7 : int, i8 : int) </td></tr>
<tr><td align="left" balign="left"> + bitBlt(bytes : byte[], i : int, i1 : int, i2 : int, i3 : int, bytes1 : byte[], i4 : int, i5 : int, i6 : int, i7 : int, i8 : int, i9 : int, i10 : int) </td></tr>
<tr><td align="left" balign="left"> + setAutoRefresh(b : boolean) </td></tr>
<tr><td align="left" balign="left"> + setAutoRefreshPeriod(i : int) : int </td></tr>
		</table></td></tr>
		</table>>, URL="../actuators/LCD.html", fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// ev3dev.actuators.Sound
	c889 [label=<<table title="ev3dev.actuators.Sound" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../actuators/Sound.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Sound </td></tr>
<tr><td align="center" balign="center"><font point-size="7.0"> ev3dev.actuators </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - log : Logger </td></tr>
<tr><td align="left" balign="left"> - SOUND_PATH : java.lang.String </td></tr>
<tr><td align="left" balign="left"> - CMD_BEEP : java.lang.String </td></tr>
<tr><td align="left" balign="left"> - CMD_APLAY : java.lang.String </td></tr>
<tr><td align="left" balign="left"> - VOLUME : java.lang.String </td></tr>
<tr><td align="left" balign="left"> - VOLUME_PATH : java.lang.String </td></tr>
<tr><td align="left" balign="left"> - DISABLED_FEATURE_MESSAGE : java.lang.String </td></tr>
<tr><td align="left" balign="left"> - Instance : ev3dev.actuators.Sound </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - Sound() </td></tr>
<tr><td align="left" balign="left"> + getInstance() : ev3dev.actuators.Sound </td></tr>
<tr><td align="left" balign="left"> + beep() </td></tr>
<tr><td align="left" balign="left"> + twoBeeps() </td></tr>
<tr><td align="left" balign="left"> + playTone(frequency : int, duration : int, volume : int) </td></tr>
<tr><td align="left" balign="left"> + playTone(frequency : int, duration : int) </td></tr>
<tr><td align="left" balign="left"> + playSample(file : java.io.File, volume : int) </td></tr>
<tr><td align="left" balign="left"> + playSample(file : java.io.File) </td></tr>
<tr><td align="left" balign="left"> + setVolume(volume : int) </td></tr>
<tr><td align="left" balign="left"> + getVolume() : int </td></tr>
		</table></td></tr>
		</table>>, URL="../actuators/Sound.html", fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// ev3dev.actuators.ev3.EV3Led
	c890 [label=<<table title="ev3dev.actuators.ev3.EV3Led" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../actuators/ev3/EV3Led.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> EV3Led </td></tr>
<tr><td align="center" balign="center"><font point-size="7.0"> ev3dev.actuators.ev3 </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - log : Logger </td></tr>
<tr><td align="left" balign="left"> + LEFT : int </td></tr>
<tr><td align="left" balign="left"> + RIGHT : int </td></tr>
<tr><td align="left" balign="left"> - direction : int </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + EV3Led(button : int) </td></tr>
<tr><td align="left" balign="left"> + setPattern(pattern : int) </td></tr>
		</table></td></tr>
		</table>>, URL="../actuators/ev3/EV3Led.html", fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// ev3dev.hardware.EV3DevDevice
	c898 [label=<<table title="ev3dev.hardware.EV3DevDevice" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" bgcolor="lemonChiffon" href="./EV3DevDevice.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Helvetica-Oblique"> EV3DevDevice </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - log : Logger </td></tr>
<tr><td align="left" balign="left"> # LEGO_PORT : String </td></tr>
<tr><td align="left" balign="left"> # ADDRESS : String </td></tr>
<tr><td align="left" balign="left"> # LEGO_SENSOR : String </td></tr>
<tr><td align="left" balign="left"> # MODE : String </td></tr>
<tr><td align="left" balign="left"> # DEVICE : String </td></tr>
<tr><td align="left" balign="left"> # PATH_DEVICE : File </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + EV3DevDevice() </td></tr>
<tr><td align="left" balign="left"> # detect(type : String, portName : String) </td></tr>
<tr><td align="left" balign="left"> # getStringAttribute(attribute : String) : String </td></tr>
<tr><td align="left" balign="left"> # getIntegerAttribute(attribute : String) : int </td></tr>
<tr><td align="left" balign="left"> # setStringAttribute(attribute : String, value : String) </td></tr>
<tr><td align="left" balign="left"> # setIntegerAttribute(attribute : String, value : int) </td></tr>
		</table></td></tr>
		</table>>, URL="./EV3DevDevice.html", fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// ev3dev.hardware.EV3DevMotorDevice
	c900 [label=<<table title="ev3dev.hardware.EV3DevMotorDevice" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./EV3DevMotorDevice.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Helvetica-Oblique"> EV3DevMotorDevice </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - log : Logger </td></tr>
<tr><td align="left" balign="left"> # TACHO_MOTOR : String </td></tr>
<tr><td align="left" balign="left"> # DC_MOTOR : String </td></tr>
<tr><td align="left" balign="left"> # AUTO_MODE : String </td></tr>
<tr><td align="left" balign="left"> # POSITION_SP : String </td></tr>
<tr><td align="left" balign="left"> # POSITION : String </td></tr>
<tr><td align="left" balign="left"> # SPEED : String </td></tr>
<tr><td align="left" balign="left"> # DUTY_CYCLE : String </td></tr>
<tr><td align="left" balign="left"> # COMMAND : String </td></tr>
<tr><td align="left" balign="left"> # RUN_FOREVER : String </td></tr>
<tr><td align="left" balign="left"> # RUN_DIRECT : String </td></tr>
<tr><td align="left" balign="left"> # RUN_TO_REL_POS : String </td></tr>
<tr><td align="left" balign="left"> # RUN_TO_ABS_POS : String </td></tr>
<tr><td align="left" balign="left"> # STOP_COMMAND : String </td></tr>
<tr><td align="left" balign="left"> # COAST : String </td></tr>
<tr><td align="left" balign="left"> # BRAKE : String </td></tr>
<tr><td align="left" balign="left"> # HOLD : String </td></tr>
<tr><td align="left" balign="left"> # STOP : String </td></tr>
<tr><td align="left" balign="left"> # RESET : String </td></tr>
<tr><td align="left" balign="left"> # STATE : String </td></tr>
<tr><td align="left" balign="left"> # STATE_RUNNING : String </td></tr>
<tr><td align="left" balign="left"> # STATE_STALLED : String </td></tr>
<tr><td align="left" balign="left"> # POWER : String </td></tr>
<tr><td align="left" balign="left"> # POLARITY : String </td></tr>
<tr><td align="left" balign="left"> # POLARITY_NORMAL : String </td></tr>
<tr><td align="left" balign="left"> # POLARITY_INVERSED : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + EV3DevMotorDevice() </td></tr>
		</table></td></tr>
		</table>>, URL="./EV3DevMotorDevice.html", fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// ev3dev.hardware.EV3DevPlatforms
	c902 [label=<<table title="ev3dev.hardware.EV3DevPlatforms" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./EV3DevPlatforms.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Helvetica-Oblique"> EV3DevPlatforms </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - log : Logger </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + EV3DevPlatforms() </td></tr>
<tr><td align="left" balign="left"> # getPlatform() : EV3DevPlatform </td></tr>
<tr><td align="left" balign="left"> # getMotorPort(port : String) : String </td></tr>
<tr><td align="left" balign="left"> # getSensorPort(port : String) : String </td></tr>
		</table></td></tr>
		</table>>, URL="./EV3DevPlatforms.html", fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// ev3dev.hardware.EV3DevSensorDevice
	c903 [label=<<table title="ev3dev.hardware.EV3DevSensorDevice" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./EV3DevSensorDevice.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Helvetica-Oblique"> EV3DevSensorDevice </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - log : Logger </td></tr>
<tr><td align="left" balign="left"> # LEGO_UART_SENSOR : String </td></tr>
<tr><td align="left" balign="left"> # LEGO_ANALOG_SENSOR : String </td></tr>
<tr><td align="left" balign="left"> # SENSOR_MODES : String </td></tr>
<tr><td align="left" balign="left"> # SENSOR_MODE : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> # EV3DevSensorDevice(portName : String, mode : String, device : String) </td></tr>
<tr><td align="left" balign="left"> # EV3DevSensorDevice(portName : String, mode : String) </td></tr>
		</table></td></tr>
		</table>>, URL="./EV3DevSensorDevice.html", fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// ev3dev.sensors.Battery
	c906 [label=<<table title="ev3dev.sensors.Battery" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../sensors/Battery.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Battery </td></tr>
<tr><td align="center" balign="center"><font point-size="7.0"> ev3dev.sensors </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - log : Logger </td></tr>
<tr><td align="left" balign="left"> - BATTERY : java.lang.String </td></tr>
<tr><td align="left" balign="left"> - BATTERY_EV3 : java.lang.String </td></tr>
<tr><td align="left" balign="left"> - BATTERY_PISTORMS : java.lang.String </td></tr>
<tr><td align="left" balign="left"> - BATTERY_BRICKPI : java.lang.String </td></tr>
<tr><td align="left" balign="left"> - BATTERY_PATH : java.lang.String </td></tr>
<tr><td align="left" balign="left"> - VOLTAGE : java.lang.String </td></tr>
<tr><td align="left" balign="left"> - CURRENT : java.lang.String </td></tr>
<tr><td align="left" balign="left"> - BATTERY_PATH_LOCAL : java.lang.String </td></tr>
<tr><td align="left" balign="left"> - Instance : ev3dev.sensors.Battery </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - Battery() </td></tr>
<tr><td align="left" balign="left"> + getInstance() : ev3dev.sensors.Battery </td></tr>
<tr><td align="left" balign="left"> + getVoltageMilliVolt() : int </td></tr>
<tr><td align="left" balign="left"> + getVoltage() : float </td></tr>
<tr><td align="left" balign="left"> + getBatteryCurrent() : float </td></tr>
<tr><td align="left" balign="left"> + getMotorCurrent() : float </td></tr>
		</table></td></tr>
		</table>>, URL="../sensors/Battery.html", fontname="Helvetica", fontcolor="black", fontsize=9.0];
	//ev3dev.actuators.LCD extends ev3dev.hardware.EV3DevDevice
	c898:p -> c888:p [dir=back,arrowtail=empty];
	//ev3dev.actuators.Sound extends ev3dev.hardware.EV3DevDevice
	c898:p -> c889:p [dir=back,arrowtail=empty];
	//ev3dev.actuators.ev3.EV3Led extends ev3dev.hardware.EV3DevDevice
	c898:p -> c890:p [dir=back,arrowtail=empty];
	//ev3dev.hardware.EV3DevDevice extends ev3dev.hardware.EV3DevPlatforms
	c902:p -> c898:p [dir=back,arrowtail=empty];
	//ev3dev.hardware.EV3DevMotorDevice extends ev3dev.hardware.EV3DevDevice
	c898:p -> c900:p [dir=back,arrowtail=empty];
	//ev3dev.hardware.EV3DevSensorDevice extends ev3dev.hardware.EV3DevDevice
	c898:p -> c903:p [dir=back,arrowtail=empty];
	//ev3dev.sensors.Battery extends ev3dev.hardware.EV3DevDevice
	c898:p -> c906:p [dir=back,arrowtail=empty];
}

