#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version R5_6-24-gf6e263 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="Helvetica",fontsize=10,labelfontname="Helvetica",labelfontsize=10];
	node [fontname="Helvetica",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	// lejos.robotics.navigation.ArcAlgorithms
	c137 [label=<<table title="lejos.robotics.navigation.ArcAlgorithms" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ArcAlgorithms.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> ArcAlgorithms </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - ArcAlgorithms() </td></tr>
<tr><td align="left" balign="left"> + getBestPath(start : Pose, turnRadius1 : float, destination : Pose, turnRadius2 : float) : Move[] </td></tr>
<tr><td align="left" balign="left"> + getAvailablePaths(start : Pose, turnRadius1 : float, destination : Pose, turnRadius2 : float) : Move[][] </td></tr>
<tr><td align="left" balign="left"> + getAvailablePaths(start : Pose, destination : Point, turnRadius : float) : Move[][] </td></tr>
<tr><td align="left" balign="left"> + getBestPath(start : Pose, destination : Point, radius : float) : Move[] </td></tr>
<tr><td align="left" balign="left"> + getBestPath(paths : Move[][]) : Move[] </td></tr>
<tr><td align="left" balign="left"> + findPointOnHeading(original : Point, heading : float, distance : float) : Point </td></tr>
<tr><td align="left" balign="left"> + getTriangleAngle(p1 : Point, p2 : Point, pa : Point) : float </td></tr>
<tr><td align="left" balign="left"> + getHeading(oldHeading : float, changeInHeading : float) : float </td></tr>
<tr><td align="left" balign="left"> + getArc(p1 : Point, p2 : Point, radius : float, heading : float, forward : boolean) : float </td></tr>
<tr><td align="left" balign="left"> + getArcBackward(forwardArc : float) : float </td></tr>
<tr><td align="left" balign="left"> + getArcOld(p1 : Point, p2 : Point, radius : double) : double </td></tr>
<tr><td align="left" balign="left"> - distP2toP3(radius : double, z : double) : double </td></tr>
<tr><td align="left" balign="left"> + distBetweenPoints(a : Point, b : Point) : float </td></tr>
<tr><td align="left" balign="left"> + getHeading(from : Point, to : Point) : float </td></tr>
<tr><td align="left" balign="left"> + findP2(c : Point, p3 : Point, radius : float) : Point </td></tr>
<tr><td align="left" balign="left"> + findCircleCenter(p1 : Point, radius : float, heading : float) : Point </td></tr>
		</table></td></tr>
		</table>>, URL="./ArcAlgorithms.html", fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// lejos.robotics.navigation.ArcMoveController
	c138 [label=<<table title="lejos.robotics.navigation.ArcMoveController" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ArcMoveController.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> ArcMoveController </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="9.0"> + getMinRadius() : double </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="9.0"> + setMinRadius(radius : double) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="9.0"> + arcForward(radius : double) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="9.0"> + arcBackward(radius : double) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="9.0"> + arc(radius : double, angle : double) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="9.0"> + arc(radius : double, angle : double, immediateReturn : boolean) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="9.0"> + travelArc(radius : double, distance : double) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="9.0"> + travelArc(radius : double, distance : double, immediateReturn : boolean) </font></td></tr>
		</table></td></tr>
		</table>>, URL="./ArcMoveController.html", fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// lejos.robotics.navigation.ArcRotateMoveController
	c139 [label=<<table title="lejos.robotics.navigation.ArcRotateMoveController" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ArcRotateMoveController.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> ArcRotateMoveController </td></tr>
		</table></td></tr>
		</table>>, URL="./ArcRotateMoveController.html", fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// lejos.robotics.navigation.CompassPilot
	c140 [label=<<table title="lejos.robotics.navigation.CompassPilot" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./CompassPilot.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> CompassPilot </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> # compass : DirectionFinder </td></tr>
<tr><td align="left" balign="left"> # regulator : CompassPilot.Regulator </td></tr>
<tr><td align="left" balign="left"> # _heading : float </td></tr>
<tr><td align="left" balign="left"> # _estimatedHeading : float </td></tr>
<tr><td align="left" balign="left"> # _traveling : boolean </td></tr>
<tr><td align="left" balign="left"> # _distance : float </td></tr>
<tr><td align="left" balign="left"> # _direction : byte </td></tr>
<tr><td align="left" balign="left"> # _heading0 : float </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + CompassPilot(compass : DirectionFinder, wheelDiameter : float, trackWidth : float, leftMotor : RegulatedMotor, rightMotor : RegulatedMotor) </td></tr>
<tr><td align="left" balign="left"> + CompassPilot(compass : DirectionFinder, wheelDiameter : float, trackWidth : float, leftMotor : RegulatedMotor, rightMotor : RegulatedMotor, reverse : boolean) </td></tr>
<tr><td align="left" balign="left"> + isTraveling() : boolean </td></tr>
<tr><td align="left" balign="left"> + getCompass() : DirectionFinder </td></tr>
<tr><td align="left" balign="left"> + getAngleIncrement() : float </td></tr>
<tr><td align="left" balign="left"> + getHeading() : float </td></tr>
<tr><td align="left" balign="left"> + getCompassHeading() : float </td></tr>
<tr><td align="left" balign="left"> + setHeading(angle : float) </td></tr>
<tr><td align="left" balign="left"> + calibrate() </td></tr>
<tr><td align="left" balign="left"> + resetCartesianZero() </td></tr>
<tr><td align="left" balign="left"> + getHeadingError() : float </td></tr>
<tr><td align="left" balign="left"> + travel(distance : float, immediateReturn : boolean) </td></tr>
<tr><td align="left" balign="left"> + travel(distance : float) </td></tr>
<tr><td align="left" balign="left"> + rotate(angle : float, immediateReturn : boolean) </td></tr>
<tr><td align="left" balign="left"> + rotate(angle : float) </td></tr>
<tr><td align="left" balign="left"> + reset() </td></tr>
<tr><td align="left" balign="left"> # stopNow() </td></tr>
<tr><td align="left" balign="left"> + stop() </td></tr>
<tr><td align="left" balign="left"> # normalize(angle : float) : float </td></tr>
		</table></td></tr>
		</table>>, URL="./CompassPilot.html", fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// lejos.robotics.navigation.CompassPilot.Regulator
	c141 [label=<<table title="lejos.robotics.navigation.CompassPilot.Regulator" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./CompassPilot.Regulator.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Regulator </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> ~ Regulator() </td></tr>
<tr><td align="left" balign="left"> + run() </td></tr>
		</table></td></tr>
		</table>>, URL="./CompassPilot.Regulator.html", fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// lejos.robotics.navigation.DestinationUnreachableException
	c142 [label=<<table title="lejos.robotics.navigation.DestinationUnreachableException" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./DestinationUnreachableException.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> DestinationUnreachableException </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + DestinationUnreachableException() </td></tr>
		</table></td></tr>
		</table>>, URL="./DestinationUnreachableException.html", fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// lejos.robotics.navigation.DifferentialPilot
	c143 [label=<<table title="lejos.robotics.navigation.DifferentialPilot" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./DifferentialPilot.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> DifferentialPilot </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - _turnRadius : float </td></tr>
<tr><td align="left" balign="left"> # _left : RegulatedMotor </td></tr>
<tr><td align="left" balign="left"> # _right : RegulatedMotor </td></tr>
<tr><td align="left" balign="left"> - _inside : RegulatedMotor </td></tr>
<tr><td align="left" balign="left"> # _outside : RegulatedMotor </td></tr>
<tr><td align="left" balign="left"> - _steerRatio : float </td></tr>
<tr><td align="left" balign="left"> # _leftDegPerDistance : float </td></tr>
<tr><td align="left" balign="left"> # _rightDegPerDistance : float </td></tr>
<tr><td align="left" balign="left"> - _leftTurnRatio : float </td></tr>
<tr><td align="left" balign="left"> - _rightTurnRatio : float </td></tr>
<tr><td align="left" balign="left"> - _robotTravelSpeed : float </td></tr>
<tr><td align="left" balign="left"> - _robotRotateSpeed : float </td></tr>
<tr><td align="left" balign="left"> - _parity : byte </td></tr>
<tr><td align="left" balign="left"> - _trackWidth : float </td></tr>
<tr><td align="left" balign="left"> - _leftWheelDiameter : float </td></tr>
<tr><td align="left" balign="left"> - _rightWheelDiameter : float </td></tr>
<tr><td align="left" balign="left"> - _leftTC : int </td></tr>
<tr><td align="left" balign="left"> - _rightTC : int </td></tr>
<tr><td align="left" balign="left"> - _listeners : ArrayList&lt;MoveListener&gt; </td></tr>
<tr><td align="left" balign="left"> # _type : Move.MoveType </td></tr>
<tr><td align="left" balign="left"> - _distance : double </td></tr>
<tr><td align="left" balign="left"> - _angle : double </td></tr>
<tr><td align="left" balign="left"> - _acceleration : int </td></tr>
<tr><td align="left" balign="left"> - _quickAcceleration : int </td></tr>
<tr><td align="left" balign="left"> - _leftDirection : byte </td></tr>
<tr><td align="left" balign="left"> - _rightDirection : byte </td></tr>
<tr><td align="left" balign="left"> - _monitor : DifferentialPilot.Monitor </td></tr>
<tr><td align="left" balign="left"> - _moveActive : boolean </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + DifferentialPilot(wheelDiameter : double, trackWidth : double, leftMotor : RegulatedMotor, rightMotor : RegulatedMotor) </td></tr>
<tr><td align="left" balign="left"> + DifferentialPilot(wheelDiameter : double, trackWidth : double, leftMotor : RegulatedMotor, rightMotor : RegulatedMotor, reverse : boolean) </td></tr>
<tr><td align="left" balign="left"> + DifferentialPilot(leftWheelDiameter : double, rightWheelDiameter : double, trackWidth : double, leftMotor : RegulatedMotor, rightMotor : RegulatedMotor, reverse : boolean) </td></tr>
<tr><td align="left" balign="left"> - getLeftCount() : int </td></tr>
<tr><td align="left" balign="left"> - getRightCount() : int </td></tr>
<tr><td align="left" balign="left"> - setSpeed(leftSpeed : int, rightSpeed : int) </td></tr>
<tr><td align="left" balign="left"> + setLinearSpeed(travelSpeed : double) </td></tr>
<tr><td align="left" balign="left"> + getLinearSpeed() : double </td></tr>
<tr><td align="left" balign="left"> + setLinearAcceleration(acceleration : double) </td></tr>
<tr><td align="left" balign="left"> + getLinearAcceleration() : double </td></tr>
<tr><td align="left" balign="left"> - setMotorAccel(acceleration : int) </td></tr>
<tr><td align="left" balign="left"> + getMaxLinearSpeed() : double </td></tr>
<tr><td align="left" balign="left"> + setAngularSpeed(rotateSpeed : double) </td></tr>
<tr><td align="left" balign="left"> + getAngularSpeed() : double </td></tr>
<tr><td align="left" balign="left"> + getMaxRotateSpeed() : float </td></tr>
<tr><td align="left" balign="left"> + getMaxAngularSpeed() : double </td></tr>
<tr><td align="left" balign="left"> + forward() </td></tr>
<tr><td align="left" balign="left"> + backward() </td></tr>
<tr><td align="left" balign="left"> - bak() </td></tr>
<tr><td align="left" balign="left"> - fwd() </td></tr>
<tr><td align="left" balign="left"> + rotateLeft() </td></tr>
<tr><td align="left" balign="left"> + rotateRight() </td></tr>
<tr><td align="left" balign="left"> + rotate(angle : double) </td></tr>
<tr><td align="left" balign="left"> + rotate(angle : double, immediateReturn : boolean) </td></tr>
<tr><td align="left" balign="left"> + stop() </td></tr>
<tr><td align="left" balign="left"> + quickStop() </td></tr>
<tr><td align="left" balign="left"> + travel(distance : double) </td></tr>
<tr><td align="left" balign="left"> + travel(distance : double, immediateReturn : boolean) </td></tr>
<tr><td align="left" balign="left"> + arcForward(radius : double) </td></tr>
<tr><td align="left" balign="left"> + arcBackward(radius : double) </td></tr>
<tr><td align="left" balign="left"> + arc(radius : double, angle : double) </td></tr>
<tr><td align="left" balign="left"> + arc(radius : double, angle : double, immediateReturn : boolean) </td></tr>
<tr><td align="left" balign="left"> + travelArc(radius : double, distance : double) </td></tr>
<tr><td align="left" balign="left"> + travelArc(radius : double, distance : double, immediateReturn : boolean) </td></tr>
<tr><td align="left" balign="left"> - turnRate(radius : double) : double </td></tr>
<tr><td align="left" balign="left"> - radius(turnRate : double) : double </td></tr>
<tr><td align="left" balign="left"> + steer(turnRate : double) </td></tr>
<tr><td align="left" balign="left"> + steerBackward(turnRate : double) </td></tr>
<tr><td align="left" balign="left"> + steer(turnRate : double, angle : double) </td></tr>
<tr><td align="left" balign="left"> + steer(turnRate : double, angle : double, immediateReturn : boolean) </td></tr>
<tr><td align="left" balign="left"> ~ steerPrep(turnRate : double) </td></tr>
<tr><td align="left" balign="left"> # movementStart() </td></tr>
<tr><td align="left" balign="left"> # movementActive() </td></tr>
<tr><td align="left" balign="left"> - movementStop() </td></tr>
<tr><td align="left" balign="left"> + isMoving() : boolean </td></tr>
<tr><td align="left" balign="left"> - waitComplete() </td></tr>
<tr><td align="left" balign="left"> - waitForActiveMove() </td></tr>
<tr><td align="left" balign="left"> + isStalled() : boolean </td></tr>
<tr><td align="left" balign="left"> + reset() </td></tr>
<tr><td align="left" balign="left"> + setMinRadius(radius : double) </td></tr>
<tr><td align="left" balign="left"> + getMinRadius() : double </td></tr>
<tr><td align="left" balign="left"> + getMovementIncrement() : float </td></tr>
<tr><td align="left" balign="left"> + getAngleIncrement() : float </td></tr>
<tr><td align="left" balign="left"> + addMoveListener(m : MoveListener) </td></tr>
<tr><td align="left" balign="left"> + getMovement() : Move </td></tr>
<tr><td align="left" balign="left"> + getTurnRate() : double </td></tr>
<tr><td align="left" balign="left"> + setAngularAcceleration(acceleration : double) </td></tr>
<tr><td align="left" balign="left"> + getAngularAcceleration() : double </td></tr>
		</table></td></tr>
		</table>>, URL="./DifferentialPilot.html", fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// lejos.robotics.navigation.DifferentialPilot.Monitor
	c144 [label=<<table title="lejos.robotics.navigation.DifferentialPilot.Monitor" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./DifferentialPilot.Monitor.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Monitor </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + more : boolean </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Monitor() </td></tr>
<tr><td align="left" balign="left"> + run() </td></tr>
		</table></td></tr>
		</table>>, URL="./DifferentialPilot.Monitor.html", fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// lejos.robotics.navigation.LineFollowingMoveController
	c145 [label=<<table title="lejos.robotics.navigation.LineFollowingMoveController" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./LineFollowingMoveController.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> LineFollowingMoveController </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="9.0"> + steer(turnRate : double) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="9.0"> + steerBackward(steerRatio : double) </font></td></tr>
		</table></td></tr>
		</table>>, URL="./LineFollowingMoveController.html", fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// lejos.robotics.navigation.Move
	c146 [label=<<table title="lejos.robotics.navigation.Move" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./Move.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Move </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - distanceTraveled : float </td></tr>
<tr><td align="left" balign="left"> - angleTurned : float </td></tr>
<tr><td align="left" balign="left"> - moveType : Move.MoveType </td></tr>
<tr><td align="left" balign="left"> - arcRadius : float </td></tr>
<tr><td align="left" balign="left"> - isMoving : boolean </td></tr>
<tr><td align="left" balign="left"> - timeStamp : long </td></tr>
<tr><td align="left" balign="left"> - travelSpeed : float </td></tr>
<tr><td align="left" balign="left"> - rotateSpeed : float </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Move(distance : float, angle : float, isMoving : boolean) </td></tr>
<tr><td align="left" balign="left"> + Move(type : Move.MoveType, distance : float, angle : float, travelSpeed : float, rotateSpeed : float, isMoving : boolean) </td></tr>
<tr><td align="left" balign="left"> + Move(type : Move.MoveType, distance : float, angle : float, isMoving : boolean) </td></tr>
<tr><td align="left" balign="left"> + Move(isMoving : boolean, angle : float, turnRadius : float) </td></tr>
<tr><td align="left" balign="left"> + setValues(type : Move.MoveType, distance : float, angle : float, isMoving : boolean) </td></tr>
<tr><td align="left" balign="left"> + setDynamics(travelSpeed : float, rotateSpeed : float) </td></tr>
<tr><td align="left" balign="left"> - calcMoveType(distance : float, angle : float) : Move.MoveType </td></tr>
<tr><td align="left" balign="left"> + getDistanceTraveled() : float </td></tr>
<tr><td align="left" balign="left"> + getTimeStamp() : long </td></tr>
<tr><td align="left" balign="left"> + getAngleTurned() : float </td></tr>
<tr><td align="left" balign="left"> + getMoveType() : Move.MoveType </td></tr>
<tr><td align="left" balign="left"> + getArcRadius() : float </td></tr>
<tr><td align="left" balign="left"> + getTravelSpeed() : float </td></tr>
<tr><td align="left" balign="left"> + getRotateSpeed() : float </td></tr>
<tr><td align="left" balign="left"> + isMoving() : boolean </td></tr>
<tr><td align="left" balign="left"> + convertDistanceToAngle(distance : float, turnRadius : float) : float </td></tr>
<tr><td align="left" balign="left"> + convertAngleToDistance(angle : float, turnRadius : float) : float </td></tr>
<tr><td align="left" balign="left"> + dumpObject(dos : DataOutputStream) </td></tr>
<tr><td align="left" balign="left"> + loadObject(dis : DataInputStream) </td></tr>
<tr><td align="left" balign="left"> + toString() : String </td></tr>
		</table></td></tr>
		</table>>, URL="./Move.html", fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// lejos.robotics.navigation.Move.MoveType
	c147 [label=<<table title="lejos.robotics.navigation.Move.MoveType" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./Move.MoveType.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;enumeration&#187; </td></tr>
<tr><td align="center" balign="center"> MoveType </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> TRAVEL </td></tr>
<tr><td align="left" balign="left"> ROTATE </td></tr>
<tr><td align="left" balign="left"> ARC </td></tr>
<tr><td align="left" balign="left"> STOP </td></tr>
		</table></td></tr>
		</table>>, URL="./Move.MoveType.html", fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// lejos.robotics.navigation.MoveController
	c148 [label=<<table title="lejos.robotics.navigation.MoveController" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./MoveController.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> MoveController </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + WHEEL_SIZE_NXT1 : double </td></tr>
<tr><td align="left" balign="left"> + WHEEL_SIZE_NXT2 : double </td></tr>
<tr><td align="left" balign="left"> + WHEEL_SIZE_EV3 : double </td></tr>
<tr><td align="left" balign="left"> + WHEEL_SIZE_RCX : double </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="9.0"> + forward() </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="9.0"> + backward() </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="9.0"> + stop() </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="9.0"> + isMoving() : boolean </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="9.0"> + travel(distance : double) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="9.0"> + travel(distance : double, immediateReturn : boolean) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="9.0"> + setLinearSpeed(speed : double) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="9.0"> + getLinearSpeed() : double </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="9.0"> + getMaxLinearSpeed() : double </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="9.0"> + setLinearAcceleration(acceleration : double) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="9.0"> + getLinearAcceleration() : double </font></td></tr>
		</table></td></tr>
		</table>>, URL="./MoveController.html", fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// lejos.robotics.navigation.MoveListener
	c149 [label=<<table title="lejos.robotics.navigation.MoveListener" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./MoveListener.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> MoveListener </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="9.0"> + moveStarted(event : Move, mp : MoveProvider) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="9.0"> + moveStopped(event : Move, mp : MoveProvider) </font></td></tr>
		</table></td></tr>
		</table>>, URL="./MoveListener.html", fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// lejos.robotics.navigation.MoveProvider
	c150 [label=<<table title="lejos.robotics.navigation.MoveProvider" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./MoveProvider.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> MoveProvider </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="9.0"> + getMovement() : Move </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="9.0"> + addMoveListener(listener : MoveListener) </font></td></tr>
		</table></td></tr>
		</table>>, URL="./MoveProvider.html", fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// lejos.robotics.navigation.NavigationListener
	c151 [label=<<table title="lejos.robotics.navigation.NavigationListener" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./NavigationListener.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> NavigationListener </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="9.0"> + atWaypoint(waypoint : Waypoint, pose : Pose, sequence : int) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="9.0"> + pathComplete(waypoint : Waypoint, pose : Pose, sequence : int) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="9.0"> + pathInterrupted(waypoint : Waypoint, pose : Pose, sequence : int) </font></td></tr>
		</table></td></tr>
		</table>>, URL="./NavigationListener.html", fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// lejos.robotics.navigation.Navigator
	c152 [label=<<table title="lejos.robotics.navigation.Navigator" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./Navigator.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Navigator </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - _nav : Navigator.Nav </td></tr>
<tr><td align="left" balign="left"> - _path : Path </td></tr>
<tr><td align="left" balign="left"> - _keepGoing : boolean </td></tr>
<tr><td align="left" balign="left"> - _singleStep : boolean </td></tr>
<tr><td align="left" balign="left"> - _interrupted : boolean </td></tr>
<tr><td align="left" balign="left"> - _pilot : MoveController </td></tr>
<tr><td align="left" balign="left"> - poseProvider : PoseProvider </td></tr>
<tr><td align="left" balign="left"> - _pose : Pose </td></tr>
<tr><td align="left" balign="left"> - _destination : Waypoint </td></tr>
<tr><td align="left" balign="left"> - _radius : double </td></tr>
<tr><td align="left" balign="left"> - _sequenceNr : int </td></tr>
<tr><td align="left" balign="left"> - _listeners : ArrayList&lt;NavigationListener&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Navigator(pilot : MoveController) </td></tr>
<tr><td align="left" balign="left"> + Navigator(pilot : MoveController, poseProvider : PoseProvider) </td></tr>
<tr><td align="left" balign="left"> + setPoseProvider(aProvider : PoseProvider) </td></tr>
<tr><td align="left" balign="left"> + addNavigationListener(listener : NavigationListener) </td></tr>
<tr><td align="left" balign="left"> + getPoseProvider() : PoseProvider </td></tr>
<tr><td align="left" balign="left"> + getMoveController() : MoveController </td></tr>
<tr><td align="left" balign="left"> + setPath(path : Path) </td></tr>
<tr><td align="left" balign="left"> + clearPath() </td></tr>
<tr><td align="left" balign="left"> + getPath() : Path </td></tr>
<tr><td align="left" balign="left"> + followPath(path : Path) </td></tr>
<tr><td align="left" balign="left"> + followPath() </td></tr>
<tr><td align="left" balign="left"> + singleStep(yes : boolean) </td></tr>
<tr><td align="left" balign="left"> + goTo(destination : Waypoint) </td></tr>
<tr><td align="left" balign="left"> + goTo(x : float, y : float) </td></tr>
<tr><td align="left" balign="left"> + goTo(x : float, y : float, heading : float) </td></tr>
<tr><td align="left" balign="left"> + rotateTo(angle : double) : boolean </td></tr>
<tr><td align="left" balign="left"> + addWaypoint(aWaypoint : Waypoint) </td></tr>
<tr><td align="left" balign="left"> + addWaypoint(x : float, y : float) </td></tr>
<tr><td align="left" balign="left"> + addWaypoint(x : float, y : float, heading : float) </td></tr>
<tr><td align="left" balign="left"> + stop() </td></tr>
<tr><td align="left" balign="left"> + getWaypoint() : Waypoint </td></tr>
<tr><td align="left" balign="left"> + pathCompleted() : boolean </td></tr>
<tr><td align="left" balign="left"> + waitForStop() : boolean </td></tr>
<tr><td align="left" balign="left"> + isMoving() : boolean </td></tr>
<tr><td align="left" balign="left"> + pathGenerated() </td></tr>
<tr><td align="left" balign="left"> - callListeners() </td></tr>
		</table></td></tr>
		</table>>, URL="./Navigator.html", fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// lejos.robotics.navigation.Navigator.Nav
	c153 [label=<<table title="lejos.robotics.navigation.Navigator.Nav" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./Navigator.Nav.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Nav </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> ~ more : boolean </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - Nav() </td></tr>
<tr><td align="left" balign="left"> + run() </td></tr>
		</table></td></tr>
		</table>>, URL="./Navigator.Nav.html", fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// lejos.robotics.navigation.Pose
	c154 [label=<<table title="lejos.robotics.navigation.Pose" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./Pose.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Pose </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> # _location : Point </td></tr>
<tr><td align="left" balign="left"> # _heading : float </td></tr>
<tr><td align="left" balign="left"> # format : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Pose() </td></tr>
<tr><td align="left" balign="left"> + Pose(x : float, y : float, heading : float) </td></tr>
<tr><td align="left" balign="left"> + rotateUpdate(angle : float) </td></tr>
<tr><td align="left" balign="left"> + moveUpdate(distance : float) </td></tr>
<tr><td align="left" balign="left"> + translate(dx : float, dy : float) </td></tr>
<tr><td align="left" balign="left"> + arcUpdate(distance : float, turnAngle : float) </td></tr>
<tr><td align="left" balign="left"> + angleTo(destination : Point) : float </td></tr>
<tr><td align="left" balign="left"> + relativeBearing(destination : Point) : float </td></tr>
<tr><td align="left" balign="left"> + distanceTo(destination : Point) : float </td></tr>
<tr><td align="left" balign="left"> + pointAt(distance : float, bearing : float) : Point </td></tr>
<tr><td align="left" balign="left"> + getHeading() : float </td></tr>
<tr><td align="left" balign="left"> + getX() : float </td></tr>
<tr><td align="left" balign="left"> + getY() : float </td></tr>
<tr><td align="left" balign="left"> + getLocation() : Point </td></tr>
<tr><td align="left" balign="left"> + setLocation(p : Point) </td></tr>
<tr><td align="left" balign="left"> + setLocation(x : float, y : float) </td></tr>
<tr><td align="left" balign="left"> + setHeading(heading : float) </td></tr>
<tr><td align="left" balign="left"> + toString() : String </td></tr>
<tr><td align="left" balign="left"> + dumpObject(dos : DataOutputStream) </td></tr>
<tr><td align="left" balign="left"> + loadObject(dis : DataInputStream) </td></tr>
		</table></td></tr>
		</table>>, URL="./Pose.html", fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// lejos.robotics.navigation.RotateMoveController
	c155 [label=<<table title="lejos.robotics.navigation.RotateMoveController" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./RotateMoveController.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> RotateMoveController </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="9.0"> + rotate(angle : double) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="9.0"> + rotate(angle : double, immediateReturn : boolean) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="9.0"> + setAngularSpeed(speed : double) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="9.0"> + getAngularSpeed() : double </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="9.0"> + getMaxAngularSpeed() : double </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="9.0"> + setAngularAcceleration(acceleration : double) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="9.0"> + getAngularAcceleration() : double </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="9.0"> + rotateRight() </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="9.0"> + rotateLeft() </font></td></tr>
		</table></td></tr>
		</table>>, URL="./RotateMoveController.html", fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// lejos.robotics.navigation.Waypoint
	c156 [label=<<table title="lejos.robotics.navigation.Waypoint" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./Waypoint.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Waypoint </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> # heading : float </td></tr>
<tr><td align="left" balign="left"> # headingRequired : boolean </td></tr>
<tr><td align="left" balign="left"> # maxPositionError : float </td></tr>
<tr><td align="left" balign="left"> # maxHeadingError : float </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Waypoint(x : double, y : double) </td></tr>
<tr><td align="left" balign="left"> + Waypoint(x : double, y : double, heading : double) </td></tr>
<tr><td align="left" balign="left"> + Waypoint(p : Point) </td></tr>
<tr><td align="left" balign="left"> + getHeading() : double </td></tr>
<tr><td align="left" balign="left"> + isHeadingRequired() : boolean </td></tr>
<tr><td align="left" balign="left"> + getMaxPositionError() : double </td></tr>
<tr><td align="left" balign="left"> + setMaxPositionError(distance : double) </td></tr>
<tr><td align="left" balign="left"> + getMaxHeadingError() : double </td></tr>
<tr><td align="left" balign="left"> + setMaxHeadingError(distance : double) </td></tr>
<tr><td align="left" balign="left"> + getPose() : Pose </td></tr>
<tr><td align="left" balign="left"> + checkValidity(p : Pose) : boolean </td></tr>
<tr><td align="left" balign="left"> + dumpObject(dos : DataOutputStream) </td></tr>
<tr><td align="left" balign="left"> + loadObject(dis : DataInputStream) </td></tr>
		</table></td></tr>
		</table>>, URL="./Waypoint.html", fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// lejos.robotics.navigation.WaypointListener
	c157 [label=<<table title="lejos.robotics.navigation.WaypointListener" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./WaypointListener.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> WaypointListener </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="9.0"> + addWaypoint(wp : Waypoint) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="9.0"> + pathGenerated() </font></td></tr>
		</table></td></tr>
		</table>>, URL="./WaypointListener.html", fontname="Helvetica", fontcolor="black", fontsize=9.0];
	//lejos.robotics.navigation.ArcMoveController implements lejos.robotics.navigation.MoveController
	c148:p -> c138:p [dir=back,arrowtail=empty,style=dashed];
	//lejos.robotics.navigation.ArcRotateMoveController implements lejos.robotics.navigation.ArcMoveController
	c138:p -> c139:p [dir=back,arrowtail=empty,style=dashed];
	//lejos.robotics.navigation.ArcRotateMoveController implements lejos.robotics.navigation.RotateMoveController
	c155:p -> c139:p [dir=back,arrowtail=empty,style=dashed];
	//lejos.robotics.navigation.CompassPilot extends lejos.robotics.navigation.DifferentialPilot
	c143:p -> c140:p [dir=back,arrowtail=empty];
	//lejos.robotics.navigation.DifferentialPilot implements lejos.robotics.navigation.LineFollowingMoveController
	c145:p -> c143:p [dir=back,arrowtail=empty,style=dashed];
	//lejos.robotics.navigation.LineFollowingMoveController implements lejos.robotics.navigation.ArcRotateMoveController
	c139:p -> c145:p [dir=back,arrowtail=empty,style=dashed];
	//lejos.robotics.navigation.MoveController implements lejos.robotics.navigation.MoveProvider
	c150:p -> c148:p [dir=back,arrowtail=empty,style=dashed];
	//lejos.robotics.navigation.Navigator implements lejos.robotics.navigation.WaypointListener
	c157:p -> c152:p [dir=back,arrowtail=empty,style=dashed];
	//lejos.robotics.navigation.RotateMoveController implements lejos.robotics.navigation.MoveController
	c148:p -> c155:p [dir=back,arrowtail=empty,style=dashed];
	// lejos.robotics.navigation.CompassPilot NAVASSOC lejos.robotics.navigation.CompassPilot.Regulator
	c140:p -> c141:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// lejos.robotics.navigation.DifferentialPilot NAVASSOC lejos.robotics.navigation.MoveListener
	c143:p -> c149:p [taillabel="", label="", headlabel="*", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// lejos.robotics.navigation.DifferentialPilot NAVASSOC lejos.robotics.navigation.Move.MoveType
	c143:p -> c147:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// lejos.robotics.navigation.DifferentialPilot NAVASSOC lejos.robotics.navigation.DifferentialPilot.Monitor
	c143:p -> c144:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// lejos.robotics.navigation.Move NAVASSOC lejos.robotics.navigation.Move.MoveType
	c146:p -> c147:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// lejos.robotics.navigation.Navigator NAVASSOC lejos.robotics.navigation.Navigator.Nav
	c152:p -> c153:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// lejos.robotics.navigation.Navigator NAVASSOC lejos.robotics.navigation.MoveController
	c152:p -> c148:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// lejos.robotics.navigation.Navigator NAVASSOC lejos.robotics.navigation.Pose
	c152:p -> c154:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// lejos.robotics.navigation.Navigator NAVASSOC lejos.robotics.navigation.Waypoint
	c152:p -> c156:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// lejos.robotics.navigation.Navigator NAVASSOC lejos.robotics.navigation.NavigationListener
	c152:p -> c151:p [taillabel="", label="", headlabel="*", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
}

