#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version R5_6-24-gf6e263 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="Helvetica",fontsize=10,labelfontname="Helvetica",labelfontsize=10];
	node [fontname="Helvetica",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	// lejos.utility.KalmanFilter
	c4053 [label=<<table title="lejos.utility.KalmanFilter" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" bgcolor="lemonChiffon" href="./KalmanFilter.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> KalmanFilter </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - a : Matrix </td></tr>
<tr><td align="left" balign="left"> - b : Matrix </td></tr>
<tr><td align="left" balign="left"> - c : Matrix </td></tr>
<tr><td align="left" balign="left"> - i : Matrix </td></tr>
<tr><td align="left" balign="left"> - q : Matrix </td></tr>
<tr><td align="left" balign="left"> - r : Matrix </td></tr>
<tr><td align="left" balign="left"> - at : Matrix </td></tr>
<tr><td align="left" balign="left"> - ct : Matrix </td></tr>
<tr><td align="left" balign="left"> - mu : Matrix </td></tr>
<tr><td align="left" balign="left"> - sigma : Matrix </td></tr>
<tr><td align="left" balign="left"> - muBar : Matrix </td></tr>
<tr><td align="left" balign="left"> - sigmaBar : Matrix </td></tr>
<tr><td align="left" balign="left"> - gain : Matrix </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + KalmanFilter(a : Matrix, b : Matrix, c : Matrix, q : Matrix, r : Matrix) </td></tr>
<tr><td align="left" balign="left"> + setState(mean : Matrix, covariance : Matrix) </td></tr>
<tr><td align="left" balign="left"> + update(control : Matrix, measurement : Matrix) </td></tr>
<tr><td align="left" balign="left"> + getMean() : Matrix </td></tr>
<tr><td align="left" balign="left"> + getCovariance() : Matrix </td></tr>
<tr><td align="left" balign="left"> + getPredictedMean() : Matrix </td></tr>
<tr><td align="left" balign="left"> + getPredictedCovariance() : Matrix </td></tr>
<tr><td align="left" balign="left"> + getGain() : Matrix </td></tr>
		</table></td></tr>
		</table>>, URL="./KalmanFilter.html", fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// lejos.utility.Matrix
	c4055 [label=<<table title="lejos.utility.Matrix" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./Matrix.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Matrix </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - serialVersionUID : long </td></tr>
<tr><td align="left" balign="left"> - A : double[][] </td></tr>
<tr><td align="left" balign="left"> - m : int </td></tr>
<tr><td align="left" balign="left"> - n : int </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Matrix(m : int, n : int) </td></tr>
<tr><td align="left" balign="left"> + Matrix(m : int, n : int, s : double) </td></tr>
<tr><td align="left" balign="left"> + Matrix(A : double[][]) </td></tr>
<tr><td align="left" balign="left"> + Matrix(A : double[][], m : int, n : int) </td></tr>
<tr><td align="left" balign="left"> + Matrix(vals : double[], m : int) </td></tr>
<tr><td align="left" balign="left"> + constructWithCopy(A : double[][]) : Matrix </td></tr>
<tr><td align="left" balign="left"> + copy() : Matrix </td></tr>
<tr><td align="left" balign="left"> + clone() : Object </td></tr>
<tr><td align="left" balign="left"> + getArray() : double[][] </td></tr>
<tr><td align="left" balign="left"> + getArrayCopy() : double[][] </td></tr>
<tr><td align="left" balign="left"> + getColumnPackedCopy() : double[] </td></tr>
<tr><td align="left" balign="left"> + getRowPackedCopy() : double[] </td></tr>
<tr><td align="left" balign="left"> + getRowDimension() : int </td></tr>
<tr><td align="left" balign="left"> + getColumnDimension() : int </td></tr>
<tr><td align="left" balign="left"> + get(i : int, j : int) : double </td></tr>
<tr><td align="left" balign="left"> + getMatrix(i0 : int, i1 : int, j0 : int, j1 : int) : Matrix </td></tr>
<tr><td align="left" balign="left"> + getMatrix(r : int[], c : int[]) : Matrix </td></tr>
<tr><td align="left" balign="left"> + getMatrix(i0 : int, i1 : int, c : int[]) : Matrix </td></tr>
<tr><td align="left" balign="left"> + getMatrix(r : int[], j0 : int, j1 : int) : Matrix </td></tr>
<tr><td align="left" balign="left"> + set(i : int, j : int, s : double) </td></tr>
<tr><td align="left" balign="left"> + setMatrix(i0 : int, i1 : int, j0 : int, j1 : int, X : Matrix) </td></tr>
<tr><td align="left" balign="left"> + setMatrix(r : int[], c : int[], X : Matrix) </td></tr>
<tr><td align="left" balign="left"> + setMatrix(r : int[], j0 : int, j1 : int, X : Matrix) </td></tr>
<tr><td align="left" balign="left"> + setMatrix(i0 : int, i1 : int, c : int[], X : Matrix) </td></tr>
<tr><td align="left" balign="left"> + transpose() : Matrix </td></tr>
<tr><td align="left" balign="left"> + norm1() : double </td></tr>
<tr><td align="left" balign="left"> + normInf() : double </td></tr>
<tr><td align="left" balign="left"> + normF() : double </td></tr>
<tr><td align="left" balign="left"> + uminus() : Matrix </td></tr>
<tr><td align="left" balign="left"> + plus(B : Matrix) : Matrix </td></tr>
<tr><td align="left" balign="left"> + plusEquals(B : Matrix) : Matrix </td></tr>
<tr><td align="left" balign="left"> + minus(B : Matrix) : Matrix </td></tr>
<tr><td align="left" balign="left"> + minusEquals(B : Matrix) : Matrix </td></tr>
<tr><td align="left" balign="left"> + arrayTimes(B : Matrix) : Matrix </td></tr>
<tr><td align="left" balign="left"> + arrayTimesEquals(B : Matrix) : Matrix </td></tr>
<tr><td align="left" balign="left"> + arrayRightDivide(B : Matrix) : Matrix </td></tr>
<tr><td align="left" balign="left"> + arrayRightDivideEquals(B : Matrix) : Matrix </td></tr>
<tr><td align="left" balign="left"> + arrayLeftDivide(B : Matrix) : Matrix </td></tr>
<tr><td align="left" balign="left"> + arrayLeftDivideEquals(B : Matrix) : Matrix </td></tr>
<tr><td align="left" balign="left"> + times(s : double) : Matrix </td></tr>
<tr><td align="left" balign="left"> + timesEquals(s : double) : Matrix </td></tr>
<tr><td align="left" balign="left"> + times(B : Matrix) : Matrix </td></tr>
<tr><td align="left" balign="left"> + trace() : double </td></tr>
<tr><td align="left" balign="left"> + random(m : int, n : int) : Matrix </td></tr>
<tr><td align="left" balign="left"> + identity(m : int, n : int) : Matrix </td></tr>
<tr><td align="left" balign="left"> + inverse() : Matrix </td></tr>
<tr><td align="left" balign="left"> + solve(B : Matrix) : Matrix </td></tr>
<tr><td align="left" balign="left"> + print(out : PrintStream) </td></tr>
<tr><td align="left" balign="left"> - checkMatrixDimensions(B : Matrix) </td></tr>
<tr><td align="left" balign="left"> - hypot(a : double, b : double) : double </td></tr>
		</table></td></tr>
		</table>>, URL="./Matrix.html", fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// lejos.utility.KalmanFilter NAVASSOC lejos.utility.Matrix
	c4053:p -> c4055:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// lejos.utility.KalmanFilter NAVASSOC lejos.utility.Matrix
	c4053:p -> c4055:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// lejos.utility.KalmanFilter NAVASSOC lejos.utility.Matrix
	c4053:p -> c4055:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// lejos.utility.KalmanFilter NAVASSOC lejos.utility.Matrix
	c4053:p -> c4055:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// lejos.utility.KalmanFilter NAVASSOC lejos.utility.Matrix
	c4053:p -> c4055:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// lejos.utility.KalmanFilter NAVASSOC lejos.utility.Matrix
	c4053:p -> c4055:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// lejos.utility.KalmanFilter NAVASSOC lejos.utility.Matrix
	c4053:p -> c4055:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// lejos.utility.KalmanFilter NAVASSOC lejos.utility.Matrix
	c4053:p -> c4055:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// lejos.utility.KalmanFilter NAVASSOC lejos.utility.Matrix
	c4053:p -> c4055:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// lejos.utility.KalmanFilter NAVASSOC lejos.utility.Matrix
	c4053:p -> c4055:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// lejos.utility.KalmanFilter NAVASSOC lejos.utility.Matrix
	c4053:p -> c4055:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// lejos.utility.KalmanFilter NAVASSOC lejos.utility.Matrix
	c4053:p -> c4055:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// lejos.utility.KalmanFilter NAVASSOC lejos.utility.Matrix
	c4053:p -> c4055:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
}

