#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version R5_6-24-gf6e263 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="Helvetica",fontsize=10,labelfontname="Helvetica",labelfontsize=10];
	node [fontname="Helvetica",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	// ev3dev.sensors.slamtec.RPLidarA1Driver
	c387 [label=<<table title="ev3dev.sensors.slamtec.RPLidarA1Driver" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../RPLidarA1Driver.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> RPLidarA1Driver </td></tr>
<tr><td align="center" balign="center"><font point-size="7.0"> ev3dev.sensors.slamtec </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - closingStatus : java.util.concurrent.atomic.AtomicBoolean </td></tr>
<tr><td align="left" balign="left"> - driver : ev3dev.sensors.slamtec.service.RpLidarLowLevelDriver </td></tr>
<tr><td align="left" balign="left"> - USBPort : java.lang.String </td></tr>
<tr><td align="left" balign="left"> - counter : int </td></tr>
<tr><td align="left" balign="left"> - flag : boolean </td></tr>
<tr><td align="left" balign="left"> - distancesTemp : java.util.List&lt;ev3dev.sensors.slamtec.model.ScanDistance&gt; </td></tr>
<tr><td align="left" balign="left"> - scan : ev3dev.sensors.slamtec.model.Scan </td></tr>
<tr><td align="left" balign="left"> - listenerList : java.util.List&lt;ev3dev.sensors.slamtec.RPLidarProviderListener&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + RPLidarA1Driver(USBPort : java.lang.String) </td></tr>
<tr><td align="left" balign="left"> + init() </td></tr>
<tr><td align="left" balign="left"> + scan() : ev3dev.sensors.slamtec.model.Scan </td></tr>
<tr><td align="left" balign="left"> + close() </td></tr>
<tr><td align="left" balign="left"> + addListener(listener : ev3dev.sensors.slamtec.RPLidarProviderListener) </td></tr>
<tr><td align="left" balign="left"> + removeListener(listener : ev3dev.sensors.slamtec.RPLidarProviderListener) </td></tr>
<tr><td align="left" balign="left"> + handleMeasurement(measurement : ev3dev.sensors.slamtec.service.RpLidarMeasurement) </td></tr>
<tr><td align="left" balign="left"> + containAngle(list : java.util.List&lt;ev3dev.sensors.slamtec.model.ScanDistance&gt;, angle : int) : boolean </td></tr>
<tr><td align="left" balign="left"> + handleDeviceHealth(health : ev3dev.sensors.slamtec.service.RpLidarHeath) </td></tr>
<tr><td align="left" balign="left"> + handleDeviceInfo(info : ev3dev.sensors.slamtec.service.RpLidarDeviceInfo) </td></tr>
		</table></td></tr>
		</table>>, URL="../RPLidarA1Driver.html", fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// ev3dev.sensors.slamtec.model.Scan
	c394 [label=<<table title="ev3dev.sensors.slamtec.model.Scan" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./Scan.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Scan </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - distances : List&lt;ScanDistance&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Scan(distances : List&lt;ScanDistance&gt;) </td></tr>
		</table></td></tr>
		</table>>, URL="./Scan.html", fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// ev3dev.sensors.slamtec.model.ScanDistance
	c395 [label=<<table title="ev3dev.sensors.slamtec.model.ScanDistance" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" bgcolor="lemonChiffon" href="./ScanDistance.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> ScanDistance </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - angle : int </td></tr>
<tr><td align="left" balign="left"> - distance : float </td></tr>
<tr><td align="left" balign="left"> - quality : int </td></tr>
<tr><td align="left" balign="left"> - start : boolean </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + ScanDistance() </td></tr>
		</table></td></tr>
		</table>>, URL="./ScanDistance.html", fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// ev3dev.sensors.slamtec.RPLidarA1Driver NAVASSOC ev3dev.sensors.slamtec.model.ScanDistance
	c387:p -> c395:p [taillabel="", label="", headlabel="*", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// ev3dev.sensors.slamtec.RPLidarA1Driver NAVASSOC ev3dev.sensors.slamtec.model.Scan
	c387:p -> c394:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// ev3dev.sensors.slamtec.model.Scan NAVASSOC ev3dev.sensors.slamtec.model.ScanDistance
	c394:p -> c395:p [taillabel="", label="", headlabel="*", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// ev3dev.sensors.slamtec.RPLidarA1Driver DEPEND ev3dev.sensors.slamtec.model.Scan
	c387:p -> c394:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open, style=dashed];
}

